{"version":3,"sources":["C:/ECTSP/angular2-filemanager/demo/src async","C:/ECTSP/angular2-filemanager/demo/src/app/app.component.html","C:/ECTSP/angular2-filemanager/demo/src/app/app.component.less","C:/ECTSP/angular2-filemanager/demo/src/app/app.component.ts","C:/ECTSP/angular2-filemanager/demo/src/app/app.module.ts","C:/ECTSP/angular2-filemanager/demo/src/environments/environment.ts","C:/ECTSP/angular2-filemanager/demo/src/main.ts","C:/ECTSP/angular2-filemanager/main.ts","C:/ECTSP/angular2-filemanager/src/configuration/fileManagerConfiguration.service.ts","C:/ECTSP/angular2-filemanager/src/configuration/tree.service.ts","C:/ECTSP/angular2-filemanager/src/crop/crop.component.ts","C:/ECTSP/angular2-filemanager/src/crop/crop.less","C:/ECTSP/angular2-filemanager/src/decorators/logFunction.decorator.ts","C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.component.ts","C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.html","C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.less","C:/ECTSP/angular2-filemanager/src/filemanager.component.ts","C:/ECTSP/angular2-filemanager/src/filemanager.html","C:/ECTSP/angular2-filemanager/src/filemanager.module.ts","C:/ECTSP/angular2-filemanager/src/filesList/file.model.ts","C:/ECTSP/angular2-filemanager/src/filesList/fileManagerUploader.service.ts","C:/ECTSP/angular2-filemanager/src/filesList/files-list.less","C:/ECTSP/angular2-filemanager/src/filesList/files.html","C:/ECTSP/angular2-filemanager/src/filesList/filesList.component.ts","C:/ECTSP/angular2-filemanager/src/main.less","C:/ECTSP/angular2-filemanager/src/preview/preview.component.ts","C:/ECTSP/angular2-filemanager/src/preview/preview.html","C:/ECTSP/angular2-filemanager/src/services/FilemanagerNotifcations.ts","C:/ECTSP/angular2-filemanager/src/services/extendedFileUplaoder.service.ts","C:/ECTSP/angular2-filemanager/src/services/fileTypeFilter.service.ts","C:/ECTSP/angular2-filemanager/src/services/imageDataConverter.service.ts","C:/ECTSP/angular2-filemanager/src/services/searchFilter.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerActions.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerApi.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerBackendApi.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerDispatcher.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerEffects.service.ts","C:/ECTSP/angular2-filemanager/src/store/fileManagerReducer.ts","C:/ECTSP/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.html","C:/ECTSP/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.ts","C:/ECTSP/angular2-filemanager/src/toolbar/models/button.model.ts","C:/ECTSP/angular2-filemanager/src/toolbar/models/toolbarEvent.model.ts","C:/ECTSP/angular2-filemanager/src/toolbar/searchFile/searchFile.component.html","C:/ECTSP/angular2-filemanager/src/toolbar/searchFile/searchFile.component.ts","C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.component.ts","C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.html","C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.less"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../demo/src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/demo/src async\n// module id = ../../../../../demo/src async recursive\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n    <h1>Filemanager</h1>\\r\\n    <div class=\\\"configuration-bar\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"toggleMultiSelection()\\\">\\r\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-check-square': this.fileManagerConfiguration.isMultiSelection, 'fa-square': !this.fileManagerConfiguration.isMultiSelection}\\\"></i>\\r\\n            <span>Use multiselection</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <ri-filemanager>Loading...</ri-filemanager>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/demo/src/app/app.component.html\n// module id = ../../../../../demo/src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".configuration-bar {\\n  margin: 10px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/demo/src/app/app.component.less\n// module id = ../../../../../demo/src/app/app.component.less\n// module chunks = 1","import {Component} from '@angular/core';\r\nimport {FileManagerConfiguration} from '../../../src/configuration/fileManagerConfiguration.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n  public constructor(public fileManagerConfiguration: FileManagerConfiguration) {\r\n\r\n  }\r\n\r\n  public toggleMultiSelection() {\r\n    this.fileManagerConfiguration.isMultiSelection = !this.fileManagerConfiguration.isMultiSelection;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/demo/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpModule} from '@angular/http';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {FileManagerModule, IFileManagerConfiguration} from '../../../main';\r\n\r\nconst fileManagerConfiguration: IFileManagerConfiguration = {\r\n  urls: {\r\n    foldersUrl: '/api/folder',\r\n    filesUrl: null,\r\n    folderMoveUrl: '/api/folder/move'\r\n  },\r\n  isMultiSelection: true,\r\n  mimeTypes: ['image/jpg', 'image/jpeg', 'image/png'],\r\n  maxFileSize: 50 * 1024\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FileManagerModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [\r\n    {provide: 'fileManagerConfiguration', useValue: fileManagerConfiguration}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/demo/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/demo/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/demo/src/main.ts","import {FileManagerActionsService} from './src/store/fileManagerActions.service';\r\nimport {FileManagerApiService} from './src/store/fileManagerApi.service';\r\nimport {FileManagerBackendApiService} from './src/store/fileManagerBackendApi.service';\r\nimport {FileManagerComponent} from './src/filemanager.component';\r\nimport {FileManagerConfiguration} from './src/configuration/fileManagerConfiguration.service';\r\nimport {FileManagerModule} from './src/filemanager.module';\r\nimport {FilemanagerNotifcations} from './src/services/FilemanagerNotifcations';\r\nimport {FileManagerUploader} from './src/filesList/fileManagerUploader.service';\r\nimport {ISelectFile} from './src/filesList/interface/ISelectFile';\r\nimport {IOuterFile} from './src/filesList/interface/IOuterFile';\r\nimport {IFileDataProperties} from './src/services/imageDataConverter.service';\r\nimport {IFileManagerApi} from './src/store/IFileManagerApi';\r\nimport {IFileManagerConfiguration} from './src/configuration/IFileManagerConfiguration';\r\nimport {ICropBounds} from './src/crop/ICropBounds';\r\n\r\nexport {\r\n  FileManagerActionsService,\r\n  FileManagerModule,\r\n  FileManagerBackendApiService,\r\n  FileManagerComponent,\r\n  FileManagerConfiguration,\r\n  FileManagerUploader,\r\n  FilemanagerNotifcations,\r\n  FileManagerApiService,\r\n  ICropBounds,\r\n  IFileDataProperties,\r\n  IFileManagerApi,\r\n  IFileManagerConfiguration,\r\n  IOuterFile,\r\n  ISelectFile\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/main.ts","import {IContextMenu} from '@rign/angular2-tree';\r\nimport {Injectable, Inject} from '@angular/core';\r\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\r\nimport {ICropSize} from '../crop/ICropSize';\r\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\r\n\r\n@Injectable()\r\nexport class FileManagerConfiguration {\r\n\r\n  public allowedCropSize: ICropSize[] = [\r\n    {\r\n      name: 'Landscape',\r\n      width: 300,\r\n      height: 100\r\n    },\r\n    {\r\n      name: 'Portrait',\r\n      width: 200,\r\n      height: 300\r\n    }\r\n  ];\r\n\r\n  public contextMenuItems: IContextMenu[] = [];\r\n\r\n  public fileTypesFilter: IFileTypeFilter[] = [\r\n    {\r\n      name: 'ALL',\r\n      mimes: [],\r\n      iconCls: 'fa fa-file-o',\r\n      text: 'All files',\r\n      defaultSelected: true\r\n    },\r\n    {\r\n      name: 'IMAGES',\r\n      mimes: ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'],\r\n      iconCls: 'fa fa-picture-o',\r\n      text: 'Images'\r\n    },\r\n    {\r\n      name: 'AUDIO',\r\n      mimes: ['audio/mpeg', 'audio/x-ms-wma', 'audio/vnd.rn-realaudio', 'audio/x-wav', 'audio/mp3'],\r\n      iconCls: 'fa fa-file-audio-o',\r\n      text: 'Audio'\r\n    },\r\n    {\r\n      name: 'VIDEO',\r\n      mimes: ['video/mpeg', 'video/mp4', 'video/quicktime', 'video/x-ms-wmv'],\r\n      iconCls: 'fa fa-file-video-o',\r\n      text: 'Video'\r\n    },\r\n    {\r\n      name: 'ARCHIVE',\r\n      mimes: ['application/zip'],\r\n      iconCls: 'fa fa-file-archive-o',\r\n      text: 'Archive'\r\n    }\r\n  ];\r\n\r\n  public folderUrls: {foldersUrl: string, folderMoveUrl: string};\r\n  public fileUrl = '/api/files';\r\n\r\n  public isMultiSelection: boolean;\r\n\r\n  public maxFileSize: number;\r\n\r\n  public mimeTypes: string[] | null;\r\n\r\n  constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\r\n    const {foldersUrl, folderMoveUrl} = configuration.urls;\r\n    this.folderUrls = {foldersUrl, folderMoveUrl};\r\n    this.fileUrl = configuration.urls.filesUrl;\r\n    this.isMultiSelection = configuration.isMultiSelection || false;\r\n    this.maxFileSize = configuration.maxFileSize || 0;\r\n    this.mimeTypes = configuration.mimeTypes || null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/configuration/fileManagerConfiguration.service.ts","import {Injectable, Inject} from '@angular/core';\r\nimport {NodeService} from '@rign/angular2-tree';\r\nimport {Http} from '@angular/http';\r\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\r\n\r\n@Injectable()\r\nexport class TreeService extends NodeService {\r\n  public constructor(protected http: Http, @Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\r\n    super(http);\r\n\r\n    this.apiConfig = {\r\n      addUrl: configuration.urls.foldersUrl,\r\n      getUrl: configuration.urls.foldersUrl,\r\n      updateUrl: configuration.urls.foldersUrl,\r\n      removeUrl: configuration.urls.foldersUrl,\r\n      moveUrl: configuration.urls.folderMoveUrl\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/configuration/tree.service.ts","import {\r\n  Component, Input, ViewChild, ViewContainerRef, ComponentFactoryResolver, Output,\r\n  EventEmitter, OnDestroy\r\n} from \"@angular/core\";\r\nimport {FileModel} from \"../filesList/file.model\";\r\nimport {CropperSettings} from \"ng2-img-cropper/src/cropperSettings\";\r\nimport {ImageCropperComponent} from \"ng2-img-cropper/src/imageCropperComponent\";\r\nimport {ICropSize} from \"./ICropSize\";\r\nimport {FileManagerConfiguration} from \"../configuration/fileManagerConfiguration.service\";\r\nimport {Bounds} from \"ng2-img-cropper/src/model/bounds\";\r\nimport {ICropBounds} from \"./ICropBounds\";\r\nimport {FileManagerDispatcherService} from \"../store/fileManagerDispatcher.service\";\r\n\r\n@Component({\r\n  selector: 'crop-image',\r\n  styleUrls: ['./crop.less'],\r\n  template: `\r\n    <div class=\"crop-image\">\r\n      <div class=\"crop-workbench\">\r\n        <div #container></div>\r\n      </div>\r\n      <div class=\"btn-toolbar\">\r\n        <div class=\"btn-group\">\r\n          <button class=\"btn btn-primary\" *ngFor=\"let cropSize of cropSizeList\" (click)=\"updateCropSize(cropSize)\"\r\n                  [ngClass]=\"{'active': cropSize == currentCropSize}\">{{cropSize.name}}\r\n          </button>\r\n        </div>\r\n        <div class=\"btn-group pull-right\">\r\n          <button class=\"btn btn-success btn-icon\" (click)=\"cropImage()\">\r\n            <i class=\"fa fa-check\"></i>\r\n            <span>Save</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\n\r\nexport class CropComponent {\r\n  @Input() file: FileModel;\r\n\r\n  @Output() onCrop = new EventEmitter();\r\n\r\n  @ViewChild('container', {read: ViewContainerRef})\r\n  public container: ViewContainerRef;\r\n\r\n  @ViewChild('cropper')\r\n  public cropper: ImageCropperComponent;\r\n\r\n  private bounds: Bounds;\r\n\r\n  public cropSizeList: ICropSize[];\r\n  public currentCropSize: ICropSize;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver,\r\n              private configuration: FileManagerConfiguration,\r\n              private fileManagerDispatcher: FileManagerDispatcherService) {\r\n    this.cropSizeList = configuration.allowedCropSize;\r\n  }\r\n\r\n  updateCropSize(cropSize: ICropSize) {\r\n    let image = new Image();\r\n    const cropperComponent = this.resolver.resolveComponentFactory(ImageCropperComponent);\r\n    const cropperComponentRef = this.container.createComponent(cropperComponent);\r\n\r\n    if (this.container.length > 1) {\r\n      this.container.detach(0);\r\n    }\r\n\r\n    this.currentCropSize = cropSize;\r\n    cropperComponentRef.instance.settings = this.getCropperSettings();\r\n    cropperComponentRef.instance.image = {};\r\n    cropperComponentRef.instance.onCrop\r\n      .subscribe((bounds: Bounds) => this.bounds = bounds);\r\n\r\n    setTimeout(() => {\r\n      image.src = this.file.url;\r\n      cropperComponentRef.instance.setImage(image);\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.updateCropSize(this.cropSizeList[0]);\r\n  };\r\n\r\n  public cropImage() {\r\n    let bounds: ICropBounds = {\r\n      x: this.bounds.left,\r\n      y: this.bounds.top,\r\n      width: this.bounds.width,\r\n      height: this.bounds.height\r\n    };\r\n\r\n    this.fileManagerDispatcher.cropFile(this.file, bounds);\r\n  }\r\n\r\n\r\n  private getCropperSettings() {\r\n    let cropperSettings = new CropperSettings();\r\n    let scale = this.calculateScale();\r\n    let width = scale * this.file.getWidth();\r\n    let height = scale * this.file.getHeight();\r\n\r\n    cropperSettings.noFileInput = true;\r\n    cropperSettings.width = this.currentCropSize.width;\r\n    cropperSettings.height = this.currentCropSize.height;\r\n    cropperSettings.canvasWidth = width;\r\n    cropperSettings.canvasHeight = height;\r\n\r\n    return cropperSettings;\r\n  }\r\n\r\n  /**\r\n   * Calculates scale between current file dimensions and box 600x600\r\n   * @returns {number}\r\n   */\r\n  private calculateScale(): number {\r\n    let scale = this.file.getWidth() / this.file.getHeight();\r\n\r\n    if (scale > 1) {\r\n      if (this.file.getWidth() > 600) {\r\n        return 600 / this.file.getWidth();\r\n      }\r\n    } else {\r\n      if (this.file.getHeight() > 600) {\r\n        return 600 / this.file.getHeight();\r\n      }\r\n    }\r\n\r\n    return 1;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/crop/crop.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-toolbar {\\n  margin: 5px 0;\\n}\\n.btn-toolbar .btn-group {\\n  margin: 0;\\n}\\n.crop-workbench {\\n  width: 600px;\\n  height: 400px;\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/crop/crop.less\n// module id = ../../../../../src/crop/crop.less\n// module chunks = 1","import {environment} from '../../demo/src/environments/environment';\r\n\r\nexport function log(target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) {\r\n    let originalMethod = descriptor.value;\r\n\r\n    descriptor.value = function (...args: any[]) {\r\n        let eventObject = args[0];\r\n\r\n        if (!environment.production) {\r\n            console.log(eventObject);\r\n        }\r\n\r\n        return originalMethod.apply(this, args);\r\n    };\r\n\r\n\r\n    return descriptor;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/decorators/logFunction.decorator.ts","import {Component, Input, Output, EventEmitter} from '@angular/core';\r\nimport {IButton} from './IButton';\r\n\r\n@Component({\r\n  selector: 'ri-dropdown',\r\n  styleUrls: ['./dropdown.less'],\r\n  templateUrl: './dropdown.html'\r\n})\r\n\r\nexport class DropdownComponent {\r\n  @Input() mainButton: IButton;\r\n  @Input() buttons: IButton[];\r\n\r\n  @Output() onClick = new EventEmitter();\r\n\r\n  public isOpen = false;\r\n\r\n  public hide() {\r\n    this.isOpen = false;\r\n  }\r\n\r\n  public selectButton(button: IButton) {\r\n    this.hide();\r\n    this.onClick.emit(button);\r\n  }\r\n\r\n  public toggleOpen() {\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.component.ts","module.exports = \"<div class=\\\"btn-group dropdown\\\" [ngClass]=\\\"{'open': isOpen}\\\">\\r\\n  <button class=\\\"btn btn-default\\\" (click)=\\\"selectButton(mainButton)\\\">\\r\\n    <span *ngIf=\\\"mainButton.label\\\">{{mainButton.name}}</span>\\r\\n    <i *ngIf=\\\"mainButton.icon\\\" class=\\\"{{mainButton.iconCssClass}}\\\"></i>\\r\\n  </button>\\r\\n  <button class=\\\"btn btn-default dropdown-toggle\\\" (click)=\\\"toggleOpen()\\\">\\r\\n    <span class=\\\"caret\\\"></span>\\r\\n    <span class=\\\"sr-only\\\">Split button!</span>\\r\\n  </button>\\r\\n  <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"single-button\\\" (mouseleave)=\\\"hide()\\\">\\r\\n    <!--<li class=\\\"divider\\\"></li>-->\\r\\n    <li role=\\\"menuitem\\\" *ngFor=\\\"let button of buttons\\\">\\r\\n      <a (click)=\\\"selectButton(button)\\\">\\r\\n        <span *ngIf=\\\"button.icon\\\" class=\\\"{{button.iconCssClass}}\\\"></span>\\r\\n        <span *ngIf=\\\"button.label\\\">{{button.name}}</span>\\r\\n      </a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.html\n// module id = ../../../../../src/dropdown/dropdown.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dropdown {\\n  display: inline-block;\\n  height: 34px;\\n}\\n.dropdown .btn {\\n  height: 34px;\\n}\\n.dropdown a {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/dropdown/dropdown.less\n// module id = ../../../../../src/dropdown/dropdown.less\n// module chunks = 1","import {\r\n  Component, OnInit, ViewChild, HostListener, Input, OnChanges, EventEmitter, Output\r\n} from '@angular/core';\r\nimport {\r\n  TreeComponent,\r\n  NodeService,\r\n  IContextMenu,\r\n  IOuterNode,\r\n  ITreeData,\r\n  ITreeState,\r\n  IConfiguration,\r\n  TreeModel,\r\n  TreeActionsService,\r\n  NodeDispatcherService\r\n} from '@rign/angular2-tree';\r\nimport {IOuterFile} from './filesList/interface/IOuterFile';\r\nimport {FileModel} from './filesList/file.model';\r\nimport {log} from './decorators/logFunction.decorator';\r\nimport {NotificationsService} from 'angular2-notifications';\r\nimport {IFileEvent} from './filesList/interface/IFileEvent';\r\nimport {Button} from './toolbar/models/button.model';\r\nimport {FilesListComponent} from './filesList/filesList.component';\r\nimport {IToolbarEvent} from './toolbar/interface/IToolbarEvent';\r\nimport {IFileModel} from './filesList/interface/IFileModel';\r\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\r\nimport {IFileTypeFilter} from './toolbar/interface/IFileTypeFilter';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Store} from '@ngrx/store';\r\nimport {IFileManagerState} from './store/fileManagerReducer';\r\nimport {FileTypeFilterService} from './services/fileTypeFilter.service';\r\nimport {SearchFilterService} from './services/searchFilter.service';\r\nimport {FileManagerDispatcherService} from './store/fileManagerDispatcher.service';\r\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\r\nimport {FileManagerApiService} from './store/fileManagerApi.service';\r\nimport {FilemanagerNotifcations, INotification} from './services/FilemanagerNotifcations';\r\n\r\n@Component({\r\n  selector: 'ri-filemanager',\r\n  providers: [NodeService, NotificationsService],\r\n  styleUrls: ['./main.less'],\r\n  templateUrl: './filemanager.html'\r\n})\r\nexport class FileManagerComponent implements OnInit, OnChanges {\r\n  @Input() multiSelection = false;\r\n  @Output() onSingleFileSelect = new EventEmitter();\r\n\r\n  @ViewChild(TreeComponent)\r\n  public treeComponent: TreeComponent;\r\n\r\n  @ViewChild(FilesListComponent)\r\n  public filesList: FilesListComponent;\r\n\r\n  /**\r\n   * List of files for current selected directory\r\n   * @typeObserv {Array}\r\n   */\r\n  private files$: Observable<FileModel[]>;\r\n\r\n  public filteredFiles$: Observable<FileModel[]>;\r\n\r\n  public folders: Observable<ITreeData>;\r\n\r\n\r\n  public treeConfiguration: IConfiguration = {\r\n    showAddButton: false,\r\n    disableMoveNodes: false,\r\n    treeId: 'tree',\r\n    dragZone: 'tree',\r\n    dropZone: ['tree']\r\n  };\r\n\r\n  public treeModel: TreeModel;\r\n\r\n  /** UNSED **/\r\n  public contextMenu: IContextMenu[] = [];\r\n\r\n\r\n  /**\r\n   * Current folder all files\r\n   * @typeObserv {Array}\r\n   */\r\n  private currentFolderFilesList: IFileModel[] = [];\r\n\r\n\r\n  public currentSelectedFile: IFileModel;\r\n\r\n  public isPreviewMode: boolean = false;\r\n  public isCropMode: boolean = false;\r\n\r\n  public notificationOptions = {\r\n    position: ['bottom', 'right'],\r\n    timeOut: 3000,\r\n    lastOnBottom: false,\r\n    preventDuplicates: true,\r\n    rtl: false,\r\n    showProgressBar: true,\r\n    pauseOnHover: true\r\n  };\r\n\r\n  /**\r\n   * List of context menu\r\n   * @type {IContextMenu[]}\r\n   */\r\n  public menu: IContextMenu[];\r\n\r\n  public constructor(private store: Store<ITreeState>,\r\n                     private treeActions: TreeActionsService,\r\n                     private nodeDispatcherService: NodeDispatcherService,\r\n                     private treeService: FileManagerApiService,\r\n                     private notifications: NotificationsService,\r\n                     private configuration: FileManagerConfiguration,\r\n                     private fileManagerDispatcher: FileManagerDispatcherService,\r\n                     private fileTypeFilter: FileTypeFilterService,\r\n                     private searchFilterService: SearchFilterService,\r\n                     private fileManagerEffects: FileManagerEffectsService,\r\n                     private filemanagerNotifcations: FilemanagerNotifcations) {\r\n\r\n    this.menu = configuration.contextMenuItems;\r\n\r\n    this.filemanagerNotifcations.getNotificationStream()\r\n      .subscribe((notification: INotification) => {\r\n        const {type, title, message} = notification;\r\n\r\n        this.notifications[type](title, message);\r\n      })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    /*** START - init TREE ***/\r\n    const treeId = this.treeConfiguration.treeId;\r\n    this.nodeDispatcherService.register(treeId, this.treeService);\r\n\r\n    this.store.dispatch(this.treeActions.registerTree(treeId));\r\n\r\n    this.folders = this.store.select('trees')\r\n      .map((data: ITreeState) => {\r\n        return data[treeId];\r\n      })\r\n      .filter((data: ITreeData) => !!data)\r\n    ;\r\n\r\n    this.treeModel = new TreeModel(this.folders, this.treeConfiguration);\r\n    /*** END - init TREE ***/\r\n\r\n\r\n    /*** START - init files ***/\r\n    this.files$ = this.store.select('files')\r\n      .map((data: IFileManagerState): FileModel[] => {\r\n        return data.map((file: IOuterFile) => new FileModel(file));\r\n      });\r\n\r\n    this.filteredFiles$ = Observable.combineLatest(\r\n      this.files$,\r\n      this.fileTypeFilter.filter$,\r\n      this.searchFilterService.filter$\r\n    )\r\n      .map((data: [FileModel[], IFileTypeFilter, string]): FileModel[] => {\r\n        let files = data[0];\r\n        const fileTypeFilter = data[1];\r\n        const search = data[2].toLocaleLowerCase();\r\n\r\n        if (search !== '') {\r\n          files = files.filter((file: FileModel) => {\r\n            return file.name.toLocaleLowerCase().indexOf(search) > -1;\r\n          });\r\n        }\r\n\r\n\r\n        if (fileTypeFilter && fileTypeFilter.mimes.length > 0) {\r\n          files = files.filter((file: FileModel) => {\r\n            return fileTypeFilter.mimes.indexOf(file.getMime()) > -1;\r\n          });\r\n        }\r\n\r\n        return files;\r\n      });\r\n\r\n\r\n    this.treeModel.currentSelectedNode$\r\n      .subscribe((node: IOuterNode | null) => {\r\n        this.loadFiles(node ? node.id : '');\r\n      });\r\n\r\n    /*** END - init files ***/\r\n\r\n    this.fileManagerEffects.cropFileSuccess$\r\n      .subscribe(() => {\r\n        this.closeModal();\r\n      });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.configuration.isMultiSelection = this.multiSelection;\r\n  }\r\n\r\n\r\n  get currentSelectedFolderId(): string | null {\r\n    const value = this.treeModel.currentSelectedNode$.getValue();\r\n\r\n    return value ? value.id : null;\r\n  }\r\n\r\n  @log\r\n  public onAddFolder() {\r\n    this.treeComponent.onAdd();\r\n  }\r\n\r\n  /***********************************************************************\r\n   * FILE EVENTS\r\n   **********************************************************************/\r\n  /**\r\n   * Run when all files are uploaded\r\n   * @param folderId\r\n   */\r\n  public onUpload(folderId: string) {\r\n    this.notifications.success('File upload', 'Upload complete');\r\n  }\r\n\r\n  @log\r\n  public onPreviewFile(fileEventData: IFileEvent) {\r\n    this.isPreviewMode = true;\r\n    this.currentSelectedFile = fileEventData.file;\r\n  }\r\n\r\n  @log\r\n  public onOpenCropFileEditor(fileEventData: IFileEvent) {\r\n    this.isCropMode = true;\r\n    this.currentSelectedFile = fileEventData.file;\r\n  }\r\n\r\n  @log\r\n  public onSelectFile(event: FileModel) {\r\n    this.onSingleFileSelect.next(event.getSelectData());\r\n  }\r\n\r\n  /***********************************************************************\r\n   * TOOLBAR EVENTS\r\n   **********************************************************************/\r\n\r\n  @log\r\n  public onMenuButtonClick(event: IToolbarEvent) {\r\n    switch (event.name) {\r\n      case Button.DELETE_SELECTION:\r\n        // this.files.forEach((file: IFileModel) => {\r\n        //   if (file.selected) {\r\n        //     this.removeSingleFile(file);\r\n        //   }\r\n        // });\r\n        break;\r\n      case Button.SELECT_ALL:\r\n        this.fileManagerDispatcher.selectAllFiles();\r\n        break;\r\n      case Button.UNSELECT_ALL:\r\n        this.fileManagerDispatcher.unSelectAllFiles();\r\n        break;\r\n      case Button.INVERSE_SELECTION:\r\n        this.fileManagerDispatcher.inverseSelection();\r\n        break;\r\n      case Button.REFRESH_FILES_LIST:\r\n        this.reloadFiles();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /***********************************************************************\r\n   * OTHER FUNCTIONS\r\n   **********************************************************************/\r\n  @HostListener('window:keydown', ['$event'])\r\n  public keyEvents(event: KeyboardEvent) {\r\n    if (this.isPreviewMode || this.isCropMode) {\r\n      if (event.keyCode === 27) {\r\n        this.closeModal();\r\n      }\r\n    }\r\n  }\r\n\r\n  public closeModal() {\r\n    this.isPreviewMode = false;\r\n    this.isCropMode = false;\r\n  }\r\n\r\n\r\n  private loadFiles(folderId: string) {\r\n    this.fileManagerDispatcher.loadFiles(folderId || '');\r\n  }\r\n\r\n  private reloadFiles() {\r\n    const node = this.treeModel.currentSelectedNode$.getValue();\r\n    const id = node ? node.id : '';\r\n\r\n    this.loadFiles(id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/filemanager.component.ts","module.exports = \"<div class=\\\"filemanager-container\\\">\\r\\n  <div class=\\\"fm-header\\\">\\r\\n    <toolbar\\r\\n      #toolbar\\r\\n      [currentFolderId]=\\\"currentSelectedFolderId\\\"\\r\\n      (onAddFolderClick)=\\\"onAddFolder($event)\\\"\\r\\n      (onUpload)=\\\"onUpload($event)\\\"\\r\\n      (onMenuButtonClick)=\\\"onMenuButtonClick($event)\\\"\\r\\n    ></toolbar>\\r\\n  </div>\\r\\n  <div class=\\\"fm-main-box\\\">\\r\\n    <rign-tree class=\\\"folders-box\\\" [treeModel]=\\\"treeModel\\\"></rign-tree>\\r\\n    <ri-files-list class=\\\"files-box\\\" [files]=\\\"filteredFiles$ | async\\\"\\r\\n                (onPreviewFile)=\\\"onPreviewFile($event)\\\"\\r\\n                (onCropFile)=\\\"onOpenCropFileEditor($event)\\\"\\r\\n                (onSelectFile)=\\\"onSelectFile($event)\\\"\\r\\n    ></ri-files-list>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isPreviewMode || isCropMode\\\" class=\\\"backdrop\\\">\\r\\n    <div class=\\\"modal-view\\\">\\r\\n      <div class=\\\"modal-close\\\">\\r\\n        <i class=\\\"fa fa-2x fa-times\\\" (click)=\\\"closeModal()\\\"></i>\\r\\n      </div>\\r\\n      <ri-file-preview *ngIf=\\\"isPreviewMode\\\" [files]=\\\"filteredFiles$ | async\\\" [file]=\\\"currentSelectedFile\\\"></ri-file-preview>\\r\\n      <crop-image *ngIf=\\\"isCropMode\\\" [file]=\\\"currentSelectedFile\\\" (onCrop)=\\\"onCropFile($event)\\\"></crop-image>\\r\\n    </div>\\r\\n  </div>\\r\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/filemanager.html\n// module id = ../../../../../src/filemanager.html\n// module chunks = 1","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, Inject} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {HttpModule} from '@angular/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {TreeModule, treeReducer} from '@rign/angular2-tree';\r\nimport {NotificationsService, SimpleNotificationsModule} from 'angular2-notifications';\r\nimport {FileManagerComponent} from './filemanager.component';\r\nimport {ToolbarComponent} from './toolbar/toolbar.component';\r\nimport {FilesListComponent} from './filesList/filesList.component';\r\nimport {ImageCropperComponent} from 'ng2-img-cropper';\r\nimport {CropComponent} from './crop/crop.component';\r\nimport {PreviewComponent} from './preview/preview.component';\r\nimport {DropdownComponent} from './dropdown/dropdown.component';\r\nimport {FileUploadModule} from 'ng2-file-upload';\r\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\r\nimport {FileManagerUploader} from './filesList/fileManagerUploader.service';\r\nimport {TreeService} from './configuration/tree.service';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {fileManagerReducer} from './store/fileManagerReducer';\r\nimport {FileManagerActionsService} from './store/fileManagerActions.service';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport {FileTypeFilterService} from './services/fileTypeFilter.service';\r\nimport {SearchFilterService} from './services/searchFilter.service';\r\nimport {FileManagerDispatcherService} from './store/fileManagerDispatcher.service';\r\nimport {FileTypeFilterComponent} from './toolbar/fileTypeFilter/fileTypeFilter.component';\r\nimport {SearchFileComponent} from './toolbar/searchFile/searchFile.component';\r\nimport {FileManagerApiService} from './store/fileManagerApi.service';\r\nimport {ImageDataConverter} from './services/imageDataConverter.service';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FilemanagerNotifcations} from './services/FilemanagerNotifcations';\r\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\r\nimport {FileManagerBackendApiService} from './store/fileManagerBackendApi.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ConfirmationPopoverModule.forRoot(),\r\n    EffectsModule.run(FileManagerEffectsService),\r\n    FormsModule,\r\n    FileUploadModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    SimpleNotificationsModule,\r\n    StoreModule.provideStore({files: fileManagerReducer, trees: treeReducer}),\r\n    StoreDevtoolsModule.instrumentOnlyWithExtension({}),\r\n    TreeModule\r\n  ],\r\n  declarations: [\r\n    FileManagerComponent,\r\n    FileTypeFilterComponent,\r\n    ToolbarComponent,\r\n    FilesListComponent,\r\n    DropdownComponent,\r\n    PreviewComponent,\r\n    CropComponent,\r\n    ImageCropperComponent,\r\n    SearchFileComponent\r\n  ],\r\n  entryComponents: [ImageCropperComponent],\r\n  providers: [\r\n    FileManagerActionsService,\r\n    FileManagerApiService,\r\n    FileManagerBackendApiService,\r\n    FileManagerConfiguration,\r\n    FileManagerDispatcherService,\r\n    FileManagerEffectsService,\r\n    FilemanagerNotifcations,\r\n    FileManagerUploader,\r\n    FileTypeFilterService,\r\n    ImageDataConverter,\r\n    NotificationsService,\r\n    SearchFilterService,\r\n    TreeService\r\n  ],\r\n  exports: [FileManagerComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class FileManagerModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/filemanager.module.ts","import {IOuterFile} from './interface/IOuterFile';\r\nimport {IFileModel} from './interface/IFileModel';\r\nimport {ISelectFile} from './interface/ISelectFile';\r\n\r\nexport class FileModel implements IFileModel {\r\n  static smallIconsFolder = '/icons/128px/';\r\n  static bigIconsFolder = '/icons/512px/';\r\n\r\n  private _orgData: IOuterFile;\r\n  private _name: string;\r\n\r\n  private _iconsFolder = FileModel.smallIconsFolder;\r\n\r\n  public selected = false;\r\n\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  get thumbnailUrl() {\r\n    return this.isImage() ? this._orgData.thumbnailUrl : `${FileModel.smallIconsFolder}${this.getFileExt()}.png`;\r\n  }\r\n\r\n  get url() {\r\n    return this.isImage() ? this._orgData.url : `${FileModel.bigIconsFolder}${this.getFileExt()}.png`;\r\n  }\r\n\r\n  public constructor(data: IOuterFile) {\r\n    this.fromJSON(data);\r\n  }\r\n\r\n  public fromJSON(data: IOuterFile) {\r\n    this._orgData = data;\r\n\r\n    this.name = data.name;\r\n    this.selected = data.selected || false;\r\n  }\r\n\r\n  public toJSON() {\r\n    return this._orgData;\r\n  }\r\n\r\n  public getId() {\r\n    return this._orgData.id;\r\n  }\r\n\r\n  public getHeight(): number {\r\n    return this._orgData.height || 0;\r\n  }\r\n\r\n  public getFileExt() {\r\n    return this.name.split('.').pop();\r\n  }\r\n\r\n  public getMime() {\r\n    return this._orgData.type;\r\n  }\r\n\r\n  public getWidth(): number {\r\n    return this._orgData.width || 0;\r\n  }\r\n\r\n  public isImage() {\r\n    return ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'].indexOf(this.getMime()) > -1;\r\n  }\r\n\r\n  public getSelectData(): ISelectFile {\r\n    return {\r\n      id: this.getId(),\r\n      name: this.name,\r\n      url: this.url,\r\n      width: this.getWidth(),\r\n      height: this.getHeight(),\r\n      mime: this.getMime()\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/filesList/file.model.ts","import {Injectable, Inject} from '@angular/core';\r\nimport {ExtendedFileUploader} from '../services/extendedFileUplaoder.service';\r\nimport {IFileManagerConfiguration} from '../configuration/IFileManagerConfiguration';\r\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\r\nimport {FileUploaderOptions} from 'ng2-file-upload';\r\n\r\n@Injectable()\r\nexport class FileManagerUploader {\r\n  public uploader: ExtendedFileUploader;\r\n\r\n  public constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration,\r\n                     filemanagerNotification: FilemanagerNotifcations) {\r\n    const options: FileUploaderOptions = {\r\n      allowedMimeType: configuration.mimeTypes,\r\n      url: configuration.urls.filesUrl,\r\n      maxFileSize: configuration.maxFileSize\r\n    };\r\n\r\n    this.uploader = new ExtendedFileUploader(options, filemanagerNotification);\r\n  }\r\n\r\n  public clear() {\r\n    this.uploader.authToken = null;\r\n    this.uploader.setOptions(this.getDefaultOptions());\r\n  }\r\n\r\n  public getDefaultOptions() {\r\n    let options = {};\r\n    options['removeAfterUpload'] = true;\r\n    options['autoUpload'] = true;\r\n    options['method'] = 'POST';\r\n\r\n    return options;\r\n  }\r\n\r\n  public setAuthorizationToken(token: string) {\r\n    this.uploader.authToken = token;\r\n  }\r\n\r\n  public setDirectoryId(directoryId: string | number): FileManagerUploader {\r\n    let options = this.getDefaultOptions();\r\n\r\n    options['headers'] = [{name: 'folderId', value: directoryId.toString()}];\r\n\r\n    this.uploader.setOptions(options);\r\n\r\n    return this;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/filesList/fileManagerUploader.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".files-list .file {\\n  display: inline-block;\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n  width: 140px;\\n  height: 110px;\\n  padding: 5px;\\n  border: 1px solid #cccccc;\\n  background-color: #eee;\\n  border-radius: 10px;\\n  margin: 0 0 20px 20px;\\n}\\n.files-list .file .file-img {\\n  width: 128px;\\n  height: 98px;\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n}\\n.files-list .file .file-img.file-img-symbol {\\n  background-size: contain;\\n  background-position-x: 50%;\\n}\\n.files-list .file .file-name {\\n  display: none;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  text-align: center;\\n  background-color: rgba(238, 238, 238, 0.5);\\n}\\n.files-list .file .file-menu {\\n  display: none;\\n  position: absolute;\\n  top: 30%;\\n  left: 0;\\n  right: 0;\\n  text-align: center;\\n}\\n.files-list .file .file-selection-input {\\n  display: none;\\n  position: absolute;\\n  top: 3px;\\n  left: 3px;\\n  cursor: pointer;\\n  z-index: 10;\\n}\\n.files-list .file:hover .file-img {\\n  opacity: 0.3;\\n}\\n.files-list .file:hover .file-name,\\n.files-list .file:hover .file-menu,\\n.files-list .file:hover .file-selection-input {\\n  display: block;\\n}\\n.files-list .file.selected {\\n  border-color: #fff33a;\\n  background-color: rgba(255, 243, 58, 0.5);\\n}\\n.files-list .file.selected .file-name {\\n  background-color: rgba(255, 243, 58, 0.5);\\n}\\n.files-list .file.selected .file-menu,\\n.files-list .file.selected .file-selection-input {\\n  display: none;\\n}\\n.files-list .file.selected:hover .file-selection-input {\\n  display: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/filesList/files-list.less\n// module id = ../../../../../src/filesList/files-list.less\n// module chunks = 1","module.exports = \"<div class=\\\"files-list\\\">\\r\\n  <div class=\\\"file\\\" *ngFor=\\\"let file of files\\\" [ngClass]=\\\"{'selected': file.selected}\\\" >\\r\\n    <!--<input *ngIf=\\\"configuration.isMultiSelection\\\" class=\\\"file-selection-input\\\" type=\\\"checkbox\\\" [ngModel]=\\\"file.selected\\\" (click)=\\\"toggleSelection(file)\\\">-->\\r\\n    <div class=\\\"file-selection-input\\\">\\r\\n      <i class=\\\"fa fa-2x\\\" [ngClass]=\\\"{'fa-check-square-o': file.selected, 'fa-square-o': !file.selected}\\\" (click)=\\\"toggleSelection(file)\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"img-rounded file-img\\\" [ngClass]=\\\"{'file-img-symbol': !file.isImage()}\\\"\\r\\n         [style.background-image]=\\\"'url(' + file.thumbnailUrl + ')'\\\"></div>\\r\\n    <span class=\\\"file-name\\\">{{file.name}}</span>\\r\\n    <div class=\\\"file-menu\\\">\\r\\n      <button mwlConfirmationPopover [title]=\\\"removeTitle\\\" [message]=\\\"getRemoveMessage(file)\\\" [appendToBody]=\\\"true\\\"\\r\\n              [confirmText]=\\\"'Yes'\\\" [cancelText]=\\\"'No'\\\" placement=\\\"bottom\\\" (confirm)=\\\"deleteFile(file)\\\"\\r\\n              class=\\\"btn btn-danger btn-icon\\\">\\r\\n        <i class=\\\"fa fa-trash\\\"></i>\\r\\n      </button>\\r\\n      <button (click)=\\\"openPreview(file)\\\" class=\\\"btn btn-default btn-icon\\\">\\r\\n        <i class=\\\"fa fa-search\\\"></i>\\r\\n      </button>\\r\\n      <button (click)=\\\"openCrop(file)\\\" class=\\\"btn btn-default btn-icon\\\">\\r\\n        <i class=\\\"fa fa-crop\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/filesList/files.html\n// module id = ../../../../../src/filesList/files.html\n// module chunks = 1","import {Component, Input, Output, EventEmitter} from '@angular/core';\r\nimport {FileModel} from './file.model';\r\nimport {IFileEvent} from './interface/IFileEvent';\r\nimport {IFileModel} from './interface/IFileModel';\r\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\r\nimport {IFileManagerAction} from '../store/fileManagerActions.service';\r\nimport {FileManagerDispatcherService} from '../store/fileManagerDispatcher.service';\r\nimport {NotificationsService} from 'angular2-notifications';\r\nimport {FileManagerEffectsService} from '../store/fileManagerEffects.service';\r\n\r\n@Component({\r\n  selector: 'ri-files-list',\r\n  templateUrl: './files.html',\r\n  styleUrls: ['./files-list.less']\r\n})\r\n\r\nexport class FilesListComponent {\r\n  @Input() files: FileModel[];\r\n\r\n  @Output() onPreviewFile = new EventEmitter();\r\n  @Output() onCropFile = new EventEmitter();\r\n  @Output() onSelectFile = new EventEmitter();\r\n\r\n  public removeTitle = 'Remove file';\r\n\r\n  public constructor(public configuration: FileManagerConfiguration,\r\n                     private fileManagerDispatcher: FileManagerDispatcherService,\r\n                     notifications: NotificationsService,\r\n                     fileManagerEffects: FileManagerEffectsService) {\r\n\r\n    fileManagerEffects.deleteFileSuccess$\r\n      .subscribe((action: IFileManagerAction) => {\r\n        notifications.success('File delete', `${action.payload.file.name} has been deleted`);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Fired when clicked on button \"delete file\"\r\n   *\r\n   * @param file\r\n   */\r\n  public deleteFile(file: IFileModel) {\r\n    this.fileManagerDispatcher.deleteFile(file);\r\n  }\r\n\r\n  public getRemoveMessage(file: IFileModel) {\r\n    return 'You are try to delete <b>' + file.name + '</b>. Are you sure?';\r\n  }\r\n\r\n  /**\r\n   * Select or unselect all files\r\n   *\r\n   * @param selected\r\n   */\r\n  public allFilesSelection(selected = true) {\r\n    this.files.map((file) => file.selected = selected);\r\n  }\r\n\r\n  /**\r\n   * Select inversion\r\n   */\r\n  public selectInversion() {\r\n    this.files.map((file) => file.selected = !file.selected);\r\n  }\r\n\r\n  public openPreview(file: FileModel): void {\r\n    let fileEvent: IFileEvent = {\r\n      eventName: 'onPreviewFile',\r\n      file: file\r\n    };\r\n    this.onPreviewFile.emit(fileEvent);\r\n  }\r\n\r\n  public openCrop(file: FileModel): void {\r\n    let fileEvent: IFileEvent = {\r\n      eventName: 'onCropFile',\r\n      file: file\r\n    };\r\n    this.onCropFile.emit(fileEvent);\r\n  }\r\n\r\n  public toggleSelection(file: IFileModel): void {\r\n    if (file.selected) {\r\n      this.fileManagerDispatcher.unSelectFile(file);\r\n    } else {\r\n      this.fileManagerDispatcher.selectFile(file);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/filesList/filesList.component.ts","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".filemanager-container {\\n  width: 990px;\\n  height: 700px;\\n}\\n.filemanager-container .tree .dropdown {\\n  position: relative;\\n}\\n.filemanager-container .tree .dropdown-menu {\\n  position: fixed !important;\\n}\\n.fm-main-box {\\n  position: relative;\\n  height: 100%;\\n}\\n.fm-main-box .folders-box {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 300px;\\n  overflow: hidden;\\n  overflow-y: auto;\\n}\\n.fm-main-box .files-box {\\n  display: block;\\n  position: absolute;\\n  left: 300px;\\n  top: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n  overflow-y: auto;\\n}\\n.backdrop {\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  z-index: 1000;\\n}\\n.modal-view {\\n  margin: 50px auto;\\n  max-width: 600px;\\n}\\n.modal-view .modal-close {\\n  text-align: right;\\n  margin: 5px 0;\\n  color: #fff;\\n}\\n.modal-view .modal-close .fa {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/main.less\n// module id = ../../../../../src/main.less\n// module chunks = 1","import {Component, Input, OnChanges, HostListener} from '@angular/core';\r\nimport {IFileModel} from '../filesList/interface/IFileModel';\r\nimport {FileModel} from '../filesList/file.model';\r\n\r\n@Component({\r\n  selector: 'ri-file-preview',\r\n  templateUrl: './preview.html'\r\n})\r\n\r\nexport class PreviewComponent implements OnChanges {\r\n  /**\r\n   * Collection of files\r\n   */\r\n  @Input() files: IFileModel[];\r\n\r\n  /**\r\n   * Current viewed file\r\n   */\r\n  @Input() file: IFileModel;\r\n\r\n  /**\r\n   * Current index\r\n   * @type {number}\r\n   */\r\n  public currentIndex = 0;\r\n\r\n  private length = 0;\r\n\r\n  ngOnChanges() {\r\n    this.length = this.files.length;\r\n\r\n    const selectedFiles = this.files\r\n      .filter((file: FileModel) => file.getId() === this.file.getId());\r\n\r\n    this.currentIndex = selectedFiles.length === 1 ? this.files.indexOf(selectedFiles[0]) : -1;\r\n  }\r\n\r\n  public next() {\r\n    if (this.currentIndex < this.length - 1) {\r\n      this.currentIndex++;\r\n    }\r\n  }\r\n\r\n  public prev() {\r\n    if (this.currentIndex > 0) {\r\n      this.currentIndex--;\r\n    }\r\n  }\r\n\r\n  @HostListener('window:keydown', ['$event'])\r\n  public keyEvent(event: KeyboardEvent) {\r\n    if (event.keyCode === 37 || event.keyCode === 74) {\r\n      this.prev();\r\n    }\r\n\r\n    if (event.keyCode === 39 || event.keyCode === 75) {\r\n      this.next();\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/preview/preview.component.ts","module.exports = \"<div class=\\\"filemanager-preview\\\">\\r\\n  <div class=\\\"carousel slide\\\">\\r\\n    <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\r\\n      <div class=\\\"item\\\" *ngFor=\\\"let file of files; let i = index;\\\" [ngClass]=\\\"{'active': i == currentIndex}\\\">\\r\\n        <img class=\\\"img-rounded\\\" src=\\\"{{file.url}}\\\" alt=\\\"{{file.name}}\\\" style=\\\"margin: 0 auto;\\\">\\r\\n        <div class=\\\"carousel-caption\\\">{{file.name}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <a class=\\\"left carousel-control\\\" role=\\\"button\\\" (click)=\\\"prev()\\\" *ngIf=\\\"currentIndex != 0\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    </a>\\r\\n    <a class=\\\"right carousel-control\\\"role=\\\"button\\\" (click)=\\\"next()\\\" *ngIf=\\\"currentIndex + 1 < length\\\">\\r\\n      <span class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/preview/preview.html\n// module id = ../../../../../src/preview/preview.html\n// module chunks = 1","import {Subject} from 'rxjs/Subject';\r\n\r\nexport interface INotification {\r\n  type: 'alert' | 'error' | 'success';\r\n  title: string;\r\n  message?: string;\r\n}\r\n\r\nexport class FilemanagerNotifcations {\r\n  private notifciation$ = new Subject<INotification>();\r\n\r\n  public sendNotification(notification: INotification): void {\r\n    this.notifciation$.next(notification);\r\n  }\r\n\r\n  public getNotificationStream(): Subject<INotification> {\r\n    return this.notifciation$;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/services/FilemanagerNotifcations.ts","import {FileItem, FileUploader, FileUploaderOptions} from 'ng2-file-upload';\r\nimport {IFileDataProperties, ImageDataConverter} from './imageDataConverter.service';\r\nimport {FilemanagerNotifcations, INotification} from './FilemanagerNotifcations';\r\nimport {FileLikeObject} from 'ng2-file-upload/file-upload/file-like-object.class';\r\n\r\nexport class ExtendedFileUploader extends FileUploader {\r\n\r\n  public constructor(options: FileUploaderOptions, private filemanagerNotification: FilemanagerNotifcations) {\r\n    super(options);\r\n  }\r\n\r\n  public onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: FileUploaderOptions) {\r\n    const notification: INotification = {\r\n      type: 'alert',\r\n      title: 'Add file to queue',\r\n      message: `File not add to queue`\r\n    };\r\n\r\n    if (filter.name === 'fileSize') {\r\n      notification.message = `File size is too large - max size  is ${options.maxFileSize / 1024} KB`;\r\n    } else {\r\n      notification.message = `File mime type \"${item.type}\" is not allowed`;\r\n    }\r\n    this.filemanagerNotification.sendNotification(notification)\r\n  }\r\n\r\n  public uploadItem(value: FileItem): void {\r\n    if (this.options.url) {\r\n      super.uploadItem(value);\r\n    } else {\r\n      let imageDataConverter = new ImageDataConverter();\r\n      this._onProgressItem(value, 0);\r\n\r\n      if (this.isUploading) {\r\n        return;\r\n      }\r\n\r\n      this.isUploading = true;\r\n\r\n      const header = this.options.headers.find((object: any) => object.name === 'folderId');\r\n\r\n      this._onProgressItem(value, 50);\r\n      imageDataConverter.getProperties(value._file, header.value)\r\n        .subscribe((file: IFileDataProperties) => {\r\n          this.isUploading = false;\r\n\r\n          this._onProgressItem(value, 100);\r\n          this._onCompleteItem(value, JSON.stringify(file), 200, {});\r\n        })\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/services/extendedFileUplaoder.service.ts","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\r\n\r\n@Injectable()\r\nexport class FileTypeFilterService {\r\n\r\n  /**\r\n   * File type filter\r\n   * @type {BehaviorSubject}\r\n   */\r\n  public filter$: BehaviorSubject<IFileTypeFilter | null> = new BehaviorSubject(null);\r\n\r\n  public getValue(): IFileTypeFilter | null {\r\n    return this.filter$.getValue();\r\n  }\r\n\r\n  public setValue(value: IFileTypeFilter | null) {\r\n    this.filter$.next(value);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/services/fileTypeFilter.service.ts","import {Observable} from 'rxjs/Observable';\r\nimport {UUID} from 'angular2-uuid';\r\nimport {Injectable} from '@angular/core';\r\n\r\nexport interface IFileDataProperties {\r\n  id: string | number;\r\n  folderId: string;\r\n  name: string;\r\n  size: number;\r\n  data: string;\r\n  type: string;\r\n  width?: number;\r\n  height?: number;\r\n  selected?: boolean;\r\n}\r\n\r\nexport interface IImageDimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n@Injectable()\r\nexport class ImageDataConverter {\r\n  /**\r\n   * @param {File} file\r\n   * @param {string} folderId\r\n   * @returns {Observable<IFileDataProperties>}\r\n   */\r\n  public getProperties(file: File, folderId: string): Observable<IFileDataProperties> {\r\n    let properties: IFileDataProperties = {\r\n      id: UUID.UUID(),\r\n      folderId: folderId,\r\n      name: file.name,\r\n      size: file.size,\r\n      type: file.type,\r\n      data: ''\r\n    };\r\n\r\n    let reader = this.getBase64FromFile(file);\r\n\r\n    return reader\r\n      .concatMap((data: string) => {\r\n        properties.data = data;\r\n\r\n        if (properties.type.indexOf('image') === 0) {\r\n          return this.getImageDimensions(data);\r\n        } else {\r\n          return Observable.of({width: 0, height: 0});\r\n        }\r\n      })\r\n      .map((dimensions: IImageDimensions) => {\r\n        properties.width = dimensions.width;\r\n        properties.height = dimensions.height;\r\n\r\n        return properties;\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Create observable which return image as base64 data\r\n   *\r\n   * @param file\r\n   * @return Observable<string>\r\n   */\r\n  private getBase64FromFile(file: File): Observable<string> {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n\r\n    return Observable.fromEvent(reader, 'load')\r\n      .map(() => {\r\n        return reader.result;\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Create observable which return dimensions of the image\r\n   *\r\n   * @param data\r\n   * @returns {Observable<IImageDimensions>}\r\n   */\r\n  private getImageDimensions(data: string): Observable<IImageDimensions> {\r\n    let image = new Image();\r\n    image.src = data;\r\n    image.style.display = 'none';\r\n\r\n    const loadImage = Observable.fromEvent(image, 'load')\r\n      .map(() => {\r\n        return {\r\n          width: image.naturalWidth,\r\n          height: image.naturalHeight\r\n        }\r\n      });\r\n\r\n    document.body.appendChild(image);\r\n\r\n    return loadImage;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/services/imageDataConverter.service.ts","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\n\r\n@Injectable()\r\nexport class SearchFilterService {\r\n  /**\r\n   * File type filter\r\n   * @type {BehaviorSubject}\r\n   */\r\n  public filter$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n  public getValue(): string {\r\n    return this.filter$.getValue();\r\n  }\r\n\r\n  public setValue(value: string) {\r\n    this.filter$.next(value);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/services/searchFilter.service.ts","import {Injectable} from '@angular/core';\r\nimport {Action} from '@ngrx/store';\r\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\r\nimport {IFileModel} from '../filesList/interface/IFileModel';\r\nimport {ICropBounds} from '../crop/ICropBounds';\r\n\r\nexport interface IFileManagerPayloadData {\r\n  folderId?: string;\r\n  files?: IOuterFile[];\r\n  file?: IFileModel;\r\n  bounds?: ICropBounds;\r\n}\r\n\r\nexport interface IFileManagerAction extends Action {\r\n  payload: IFileManagerPayloadData;\r\n}\r\n\r\n@Injectable()\r\nexport class FileManagerActionsService {\r\n  static FILEMANAGER_CROP_FILE = 'FILEMANAGER_CROP_FILE';\r\n  static FILEMANAGER_CROP_FILE_SUCCESS = 'FILEMANAGER_CROP_FILE_SUCCESS';\r\n  static FILEMANAGER_CROP_FILE_ERROR = 'FILEMANAGER_CROP_FILE_ERROR';\r\n  static FILEMANAGER_DELETE_FILE = 'FILEMANAGER_DELETE_FILE';\r\n  static FILEMANAGER_DELETE_FILE_SUCCESS = 'FILEMANAGER_DELETE_FILE_SUCCESS';\r\n  static FILEMANAGER_DELETE_FILE_SELECTION = 'FILEMANAGER_DELETE_FILE_SELECTION';\r\n  static FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS = 'FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS';\r\n  static FILEMANAGER_INVERSE_FILE_SELECTION = 'FILEMANAGER_INVERSE_FILE_SELECTION';\r\n  static FILEMANAGER_LOAD_FILES = 'FILEMANAGER_LOAD_FILES';\r\n  static FILEMANAGER_LOAD_FILES_SUCCESS = 'FILEMANAGER_LOAD_FILES_SUCCESS';\r\n  static FILEMANAGER_SELECT_ALL = 'FILEMANAGER_SELECT_ALL';\r\n  static FILEMANAGER_SELECT_FILE = 'FILEMANAGER_SELECT_FILE';\r\n  static FILEMANAGER_UNSELECT_FILE = 'FILEMANAGER_UNSELECT_FILE';\r\n  static FILEMANAGER_UNSELECT_ALL = 'FILEMANAGER_UNSELECT_ALL';\r\n  static FILEMANAGER_UPLOAD_FILE = 'FILEMANAGER_UPLOAD_FILE';\r\n  static FILEMANAGER_UPLOAD_FILE_ERROR = 'FILEMANAGER_UPLOAD_FILE_ERROR';\r\n  static FILEMANAGER_UPLOAD_FILE_SUCCESS = 'FILEMANAGER_UPLOAD_FILE_SUCCESS';\r\n\r\n  public cropFile(file: IFileModel, bounds: ICropBounds): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE,\r\n      payload: {\r\n        file: file,\r\n        bounds: bounds\r\n      }\r\n    }\r\n  }\r\n\r\n  public cropFileSuccess(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public cropFileError(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteFile(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteFileSuccess(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public deleteSelectedFiles(): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION,\r\n      payload: {}\r\n    }\r\n  }\r\n\r\n  public deleteSelectedFilesSuccess(files: IOuterFile[]): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION,\r\n      payload: {files}\r\n    }\r\n  }\r\n\r\n  public loadFiles(folderId: string): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES,\r\n      payload: {\r\n        folderId: folderId\r\n      }\r\n    }\r\n  }\r\n\r\n  public inverseFileSelection(): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_INVERSE_FILE_SELECTION,\r\n      payload: {}\r\n    }\r\n  }\r\n\r\n  public loadFilesSuccess(folderId: string, files: IOuterFile[]): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES_SUCCESS,\r\n      payload: {\r\n        folderId: folderId,\r\n        files: files\r\n      }\r\n    }\r\n  }\r\n\r\n  public selectAllFiles(): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_SELECT_ALL,\r\n      payload: {}\r\n    }\r\n  }\r\n\r\n  public selectFile(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_SELECT_FILE,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public unSelectAll(): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_ALL,\r\n      payload: {}\r\n    }\r\n  }\r\n\r\n  public unSelectFile(file: IFileModel): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_FILE,\r\n      payload: {\r\n        file: file\r\n      }\r\n    }\r\n  }\r\n\r\n  public upload(file: IOuterFile): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE,\r\n      payload: {\r\n        files: [file]\r\n      }\r\n    }\r\n  }\r\n\r\n  public uploadSuccess(file: IOuterFile): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_SUCCESS,\r\n      payload: {\r\n        files: [file]\r\n      }\r\n    }\r\n  }\r\n\r\n  public uploadError(file: IOuterFile): IFileManagerAction {\r\n    return {\r\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR,\r\n      payload: {\r\n        files: [file]\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerActions.service.ts","import {Injectable} from '@angular/core';\r\nimport {IOuterNode} from '@rign/angular2-tree';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {UUID} from 'angular2-uuid';\r\nimport {IFileManagerApi} from './IFileManagerApi';\r\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\r\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\r\nimport {ICropBounds} from '../crop/ICropBounds';\r\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\r\n\r\n@Injectable()\r\nexport class FileManagerApiService implements IFileManagerApi {\r\n\r\n  protected treeName = 'fileManagerTree';\r\n  protected fileManagerName = 'fileManagerFiles';\r\n\r\n\r\n  protected nodes: IOuterNode[];\r\n  protected files: IFileDataProperties[];\r\n\r\n  public constructor(private filemanagerNotfication: FilemanagerNotifcations) {\r\n  }\r\n\r\n\r\n  public load(nodeId = ''): Observable<IOuterNode[]> {\r\n    if (!this.nodes) {\r\n      this.nodes = this.getAllDataFromLocalStorage();\r\n    }\r\n\r\n    const nodes = this.getChildren(nodeId);\r\n\r\n    return Observable.of(nodes);\r\n  }\r\n\r\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\r\n    node.parentId = parentNodeId;\r\n    node.id = UUID.UUID();\r\n\r\n    this.nodes.push(node);\r\n\r\n    if (this.saveNodes()) {\r\n      return Observable.of(node);\r\n    } else {\r\n      return Observable.empty();\r\n    }\r\n\r\n  }\r\n\r\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\r\n    const srcId = srcNode.id;\r\n    const targetId = targetNode ? targetNode.id : null;\r\n\r\n    const index = this.findIndexByNodeId(srcId);\r\n\r\n    this.nodes[index].parentId = targetId;\r\n\r\n    if (this.saveNodes()) {\r\n      return Observable.of(this.nodes[index]);\r\n    } else {\r\n      return Observable.empty();\r\n    }\r\n\r\n  }\r\n\r\n  public update(node: IOuterNode): Observable<IOuterNode> {\r\n    const index = this.findIndexByNodeId(node.id);\r\n\r\n    this.nodes[index] = node;\r\n\r\n    if (this.saveNodes()) {\r\n      return Observable.of(node);\r\n    } else {\r\n      return Observable.empty();\r\n    }\r\n  }\r\n\r\n  public remove(nodeId: string): Observable<IOuterNode> {\r\n    const index = this.findIndexByNodeId(nodeId);\r\n    const node = this.nodes[index];\r\n\r\n    const hasChildren = this.getChildren(nodeId).length > 0;\r\n\r\n    if (!hasChildren) {\r\n      this.nodes.splice(index, 1);\r\n\r\n      this.saveNodes();\r\n\r\n      return Observable.of(node);\r\n    } else {\r\n      return Observable.throw('Node is not empty');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crop file\r\n   *\r\n   * @param {IOuterFile} file\r\n   * @param {ICropBounds} bounds\r\n   * @returns {Observable<IOuterFile>}\r\n   */\r\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\r\n    return Observable.throw('This functionality is not available with LocalStorage');\r\n  }\r\n\r\n  /**\r\n   * Load files from directory\r\n   *\r\n   * @param {string} nodeId\r\n   * @returns {Observable<IOuterFile[]>}\r\n   */\r\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\r\n    if (!this.files) {\r\n      this.files = this.getAllFileDataFromLocalStorage();\r\n    }\r\n\r\n    const files = this.getFilesFromFolder(nodeId);\r\n\r\n    const newFiles: IOuterFile[] = files.map((file: IFileDataProperties) => {\r\n      return this.convertLocalData2IOuterFile(file);\r\n    });\r\n\r\n    return Observable.of(newFiles);\r\n  }\r\n\r\n  public removeFile(file: IOuterFile): Observable<boolean> {\r\n    const index = this.findIndexByFileId(file.id.toString());\r\n\r\n    if (index === -1) {\r\n      return Observable.of(false);\r\n    }\r\n\r\n    this.files.splice(index, 1);\r\n    this.saveFiles();\r\n\r\n    return Observable.of(true);\r\n  }\r\n\r\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\r\n    const fileData = this.convertIOuterFile2LocalData(file);\r\n    this.files.push(fileData);\r\n\r\n    if (this.saveFiles()) {\r\n      return Observable.of(this.convertLocalData2IOuterFile(fileData));\r\n    } else {\r\n      return Observable.throw('Upload error');\r\n    }\r\n  }\r\n\r\n\r\n  private findIndexByNodeId(nodeId: string): number {\r\n    return this.nodes.findIndex((node) => {\r\n      return node.id === nodeId;\r\n    });\r\n  }\r\n\r\n  private findIndexByFileId(fileId: string): number {\r\n    return this.files.findIndex((file) => file.id === fileId);\r\n  }\r\n\r\n  private getChildren(nodeId: string): IOuterNode[] {\r\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\r\n  }\r\n\r\n  private getFilesFromFolder(nodeId: string): IFileDataProperties[] {\r\n    return this.files.filter((file: IFileDataProperties) => file.folderId === nodeId);\r\n  }\r\n\r\n  protected getAllDataFromLocalStorage(): IOuterNode[] {\r\n    try {\r\n      const data = localStorage.getItem(this.treeName);\r\n\r\n      if (data) {\r\n        return JSON.parse(data);\r\n      }\r\n\r\n      return [];\r\n\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  protected getAllFileDataFromLocalStorage(): IFileDataProperties[] {\r\n    try {\r\n      const data = localStorage.getItem(this.fileManagerName);\r\n\r\n      if (data) {\r\n        return JSON.parse(data);\r\n      }\r\n\r\n      return [];\r\n\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private saveNodes() {\r\n    try {\r\n      localStorage.setItem(this.treeName, JSON.stringify(this.nodes));\r\n\r\n      return true;\r\n    } catch (e) {\r\n      this.filemanagerNotfication.sendNotification({\r\n        type: 'error',\r\n        title: 'State is not saved.',\r\n        message: 'Reload previous state.'\r\n      });\r\n\r\n      this.files = null;\r\n      this.nodes = null;\r\n\r\n      this.load();\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private saveFiles(): boolean {\r\n    try {\r\n      localStorage.setItem(this.fileManagerName, JSON.stringify(this.files));\r\n\r\n      return true;\r\n    } catch (e) {\r\n      this.filemanagerNotfication.sendNotification({\r\n        type: 'error',\r\n        title: 'State is not saved.',\r\n        message: 'Reload previous state.'\r\n      });\r\n\r\n      const nodeId = this.files[(this.files.length - 1)].folderId || null;\r\n\r\n      this.files = null;\r\n\r\n      this.load(nodeId);\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param file\r\n   * @returns {{id: string, folderId: string, name: string, thumbnailUrl: string, url: string, width: number, height: number, mime: string}}\r\n   */\r\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\r\n    return {\r\n      id: file.id,\r\n      folderId: file.folderId,\r\n      name: file.name,\r\n      thumbnailUrl: file.data,\r\n      url: file.data,\r\n      width: file.width,\r\n      height: file.height,\r\n      type: file.type,\r\n      size: file.size\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param file\r\n   * @returns {{id: (any|string), folderId: string, name: string, type: string, data: string, size: number}}\r\n   */\r\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\r\n    return {\r\n      id: file.id.toString(),\r\n      folderId: file.folderId,\r\n      name: file.name,\r\n      type: file.type,\r\n      data: file.data,\r\n      size: file.size,\r\n      width: file.width,\r\n      height: file.height\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerApi.service.ts","import {Injectable} from '@angular/core';\r\nimport {IOuterNode} from '@rign/angular2-tree';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ICropBounds, IFileManagerApi, IOuterFile, IFileDataProperties} from '../../main';\r\nimport {Http, Response, URLSearchParams} from '@angular/http';\r\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\r\n\r\n@Injectable()\r\nexport class FileManagerBackendApiService implements IFileManagerApi {\r\n\r\n  protected nodes: IOuterNode[] = [];\r\n  protected files: IFileDataProperties[] = [];\r\n\r\n  public constructor(private $http: Http,\r\n                     private configuration: FileManagerConfiguration) {\r\n  }\r\n\r\n  /**\r\n   * Load folder chidls for given folder id\r\n   *\r\n   * @param {string} nodeId\r\n   * @returns {Observable<IOuterNode[]>}\r\n   */\r\n  public load(nodeId = ''): Observable<IOuterNode[]> {\r\n    const nodeIds = this.nodes.map((node: IOuterNode) => node.id);\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('nodeId', nodeId);\r\n\r\n    return this.$http.get(this.configuration.folderUrls.foldersUrl, {search: params})\r\n      .map((response: Response): IOuterNode[] => {\r\n        return response.json();\r\n      })\r\n      .map((nodes: IOuterNode[]) => {\r\n        nodes.forEach((node: IOuterNode) => {\r\n          if (nodeIds.indexOf(node.id) === -1) {\r\n            this.nodes.push(node);\r\n          } else {\r\n            const index = this.nodes.findIndex((item: IOuterNode) => node.id === item.id);\r\n            this.nodes[index] = node;\r\n          }\r\n        });\r\n\r\n        return nodes;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Create new folder\r\n   *\r\n   * @param {IOuterNode} node\r\n   * @param {string} parentNodeId\r\n   * @returns {Observable<IOuterNode>}\r\n   */\r\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\r\n    const data = {\r\n      node: node,\r\n      parentNodeId: parentNodeId\r\n    };\r\n\r\n    return this.$http.post(this.configuration.folderUrls.foldersUrl, data)\r\n      .map((res: Response): IOuterNode => {\r\n        return res.json();\r\n      })\r\n      .map((newNode: IOuterNode) => {\r\n        this.nodes.push(newNode);\r\n\r\n        return newNode;\r\n      })\r\n\r\n  }\r\n\r\n  /**\r\n   * Move folder from source parent to target parent\r\n   *\r\n   * @param {IOuterNode} srcNode\r\n   * @param {IOuterNode} targetNode\r\n   * @returns {Observable<IOuterNode>}\r\n   */\r\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\r\n    const srcId = srcNode.id;\r\n    const targetId = targetNode ? targetNode.id : null;\r\n\r\n\r\n    return this.$http.put(this.configuration.folderUrls.folderMoveUrl, {source: srcId, target: targetId})\r\n      .map((res: Response) => {\r\n        return res.json();\r\n      })\r\n      .map((movedNode: IOuterNode) => {\r\n        const index = this.findIndexByNodeId(srcId);\r\n        this.nodes[index].parentId = targetId;\r\n\r\n        return movedNode;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Update folder name\r\n   *\r\n   * @param {IOuterNode} node\r\n   * @returns {Observable<IOuterNode>}\r\n   */\r\n  public update(node: IOuterNode): Observable<IOuterNode> {\r\n    return this.$http.put(this.configuration.folderUrls.foldersUrl, node)\r\n      .map((res: Response) => {\r\n        const newNode = res.json();\r\n        const index = this.findIndexByNodeId(node.id);\r\n\r\n        this.nodes[index] = newNode.name;\r\n\r\n        return newNode;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Remove node by given id\r\n   *\r\n   * @param {string} nodeId\r\n   * @returns {Observable<IOuterNode>}\r\n   */\r\n  public remove(nodeId: string): Observable<IOuterNode> {\r\n    const index = this.findIndexByNodeId(nodeId);\r\n\r\n    const hasChildren = this.getChildren(nodeId).length > 0;\r\n\r\n    if (!hasChildren) {\r\n      return this.$http.delete(this.configuration.folderUrls.foldersUrl, {body: {nodeId: nodeId}})\r\n        .map((res: Response) => {\r\n          const removedNode = res.json();\r\n          this.nodes.splice(index, 1);\r\n\r\n          return removedNode;\r\n        });\r\n    } else {\r\n      return Observable.throw('Node is not empty');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Crop file\r\n   *\r\n   * @param {IOuterFile} file\r\n   * @param {ICropBounds} bounds\r\n   * @returns {Observable<IOuterFile>}\r\n   */\r\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\r\n    return this.$http.put(this.configuration.fileUrl, {id: file.id, bounds: bounds})\r\n      .map((res: Response) => {\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load files from directory\r\n   *\r\n   * @param {string} nodeId\r\n   * @returns {Observable<IOuterFile[]>}\r\n   */\r\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\r\n    const params = new URLSearchParams();\r\n    params.append('dirId', nodeId);\r\n\r\n    // return Observable.of([]);\r\n\r\n    return this.$http.get(this.configuration.fileUrl, {search: params})\r\n      .map((response: Response): IOuterFile[] => {\r\n        return response.json();\r\n      })\r\n      .map((files: IOuterFile[]) => {\r\n        this.files = files.map((file: IOuterFile) => <IFileDataProperties>file);\r\n\r\n        return files;\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Remove file from folder\r\n   *\r\n   * @param {IOuterFile} file\r\n   * @returns {Observable<boolean>}\r\n   */\r\n  public removeFile(file: IOuterFile): Observable<boolean> {\r\n    const index = this.findIndexByFileId(file.id.toString());\r\n\r\n    if (index === -1) {\r\n      return Observable.of(false);\r\n    }\r\n\r\n    const params = new URLSearchParams();\r\n    params.set('id', file.id.toString());\r\n\r\n    return this.$http.delete(this.configuration.fileUrl, {search: params})\r\n      .map((res: Response) => {\r\n        this.files.splice(index, 1);\r\n\r\n        return true;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * This method is success method, real upload is done in ExtendedFileUploader\r\n   * @param {IOuterFile} file\r\n   * @returns {Observable<IOuterFile>}\r\n   */\r\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\r\n    const fileData = this.convertIOuterFile2LocalData(file);\r\n    this.files.push(fileData);\r\n\r\n    return Observable.of(this.convertLocalData2IOuterFile(fileData));\r\n  }\r\n\r\n  /**\r\n   * @param {string} nodeId\r\n   * @returns {number}\r\n   */\r\n  private findIndexByNodeId(nodeId: string): number {\r\n    return this.nodes.findIndex((node) => {\r\n      return node.id === nodeId;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {string} fileId\r\n   * @returns {number}\r\n   */\r\n  private findIndexByFileId(fileId: string): number {\r\n    return this.files.findIndex((file) => file.id === fileId);\r\n  }\r\n\r\n  /**\r\n   * @param {string} nodeId\r\n   * @returns {IOuterNode[]}\r\n   */\r\n  private getChildren(nodeId: string): IOuterNode[] {\r\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\r\n  }\r\n\r\n  /**\r\n   * @param file\r\n   * @returns {{id: string, folderId: string, name: string, thumbnailUrl: string, url: string, width: number, height: number, mime: string}}\r\n   */\r\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\r\n    return {\r\n      id: file.id,\r\n      folderId: file.folderId,\r\n      name: file.name,\r\n      thumbnailUrl: file.data,\r\n      url: file.data,\r\n      width: file.width,\r\n      height: file.height,\r\n      type: file.type,\r\n      size: file.size\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param file\r\n   * @returns {{id: (any|string), folderId: string, name: string, type: string, data: string, size: number}}\r\n   */\r\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\r\n    return {\r\n      id: file.id.toString(),\r\n      folderId: file.folderId,\r\n      name: file.name,\r\n      type: file.type,\r\n      data: file.data,\r\n      size: file.size,\r\n      width: file.width,\r\n      height: file.height\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerBackendApi.service.ts","import {Injectable} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {IFileManagerState} from './fileManagerReducer';\r\nimport {FileManagerActionsService} from './fileManagerActions.service';\r\nimport {IFileModel} from '../filesList/interface/IFileModel';\r\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\r\nimport {ICropBounds} from '../crop/ICropBounds';\r\n\r\n@Injectable()\r\nexport class FileManagerDispatcherService {\r\n\r\n  constructor(private store: Store<IFileManagerState>, private fileManagerActions: FileManagerActionsService) {\r\n  }\r\n\r\n  public cropFile(file: IFileModel, bounds: ICropBounds): void {\r\n    this.store.dispatch(this.fileManagerActions.cropFile(file, bounds));\r\n  }\r\n\r\n  public deleteFile(file: IFileModel): void {\r\n    this.store.dispatch(this.fileManagerActions.deleteFile(file));\r\n  }\r\n\r\n  public deleteSelectedFiles(): void {\r\n    this.store.dispatch(this.fileManagerActions.deleteSelectedFiles());\r\n  }\r\n\r\n  public inverseSelection(): void {\r\n    this.store.dispatch(this.fileManagerActions.inverseFileSelection());\r\n  }\r\n\r\n  public loadFiles(folderId: string | null): void {\r\n    this.store.dispatch(this.fileManagerActions.loadFiles(folderId));\r\n  }\r\n\r\n  public selectAllFiles(): void {\r\n    this.store.dispatch(this.fileManagerActions.selectAllFiles());\r\n  }\r\n\r\n  public selectFile(file: IFileModel): void {\r\n    this.store.dispatch(this.fileManagerActions.selectFile(file));\r\n  }\r\n\r\n  public unSelectAllFiles(): void {\r\n    this.store.dispatch(this.fileManagerActions.unSelectAll());\r\n  }\r\n\r\n  public unSelectFile(file: IFileModel): void {\r\n    this.store.dispatch(this.fileManagerActions.unSelectFile(file));\r\n  }\r\n\r\n  public uploadError(file: IOuterFile) {\r\n    this.store.dispatch(this.fileManagerActions.uploadError(file));\r\n  }\r\n\r\n  public upload(file: IOuterFile) {\r\n    this.store.dispatch(this.fileManagerActions.upload(file));\r\n  }\r\n\r\n  public uploadSuccess(file: IOuterFile) {\r\n    this.store.dispatch(this.fileManagerActions.uploadSuccess(file));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerDispatcher.service.ts","import {Injectable} from '@angular/core';\r\nimport {Actions, Effect} from '@ngrx/effects';\r\nimport {FileManagerActionsService, IFileManagerAction} from './fileManagerActions.service';\r\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {IFileModel} from '../filesList/interface/IFileModel';\r\nimport {ICropBounds} from '../crop/ICropBounds';\r\nimport {FileManagerApiService} from './fileManagerApi.service';\r\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\r\n\r\n@Injectable()\r\nexport class FileManagerEffectsService {\r\n\r\n  constructor(private actions$: Actions,\r\n              private fileManagerActions: FileManagerActionsService,\r\n              private filemanagerNotfication: FilemanagerNotifcations,\r\n              private fileManagerApiService: FileManagerApiService) {\r\n  }\r\n\r\n  @Effect()\r\n  public loadFiles$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_LOAD_FILES)\r\n    .switchMap((action: IFileManagerAction) => this.loadFiles(action.payload.folderId)\r\n      .map((files: IOuterFile[]): IFileManagerAction => {\r\n        return this.fileManagerActions.loadFilesSuccess(action.payload.folderId, files);\r\n      })\r\n      .catch(() => Observable.of(this.onLoadFilesError(action.payload.folderId)))\r\n    );\r\n\r\n  @Effect()\r\n  public cropFile$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE)\r\n    .switchMap((action: IFileManagerAction) => this.cropFile(action.payload.file, action.payload.bounds)\r\n      .map((result: IOuterFile): IFileManagerAction => {\r\n        this.filemanagerNotfication.sendNotification({\r\n          type: 'success',\r\n          title: 'Crop Image.',\r\n          message: 'Image has been cropped.'\r\n        });\r\n        return this.fileManagerActions.cropFileSuccess(action.payload.file);\r\n      })\r\n      .catch(() => Observable.of(this.fileManagerActions.cropFileError(action.payload.file)))\r\n    );\r\n\r\n  @Effect()\r\n  public deleteFile$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE)\r\n    .switchMap((action: IFileManagerAction) => this.deleteFile(action.payload.file)\r\n      .map((result: boolean): IFileManagerAction => {\r\n        return this.fileManagerActions.deleteFileSuccess(action.payload.file);\r\n      })\r\n      .catch(() => Observable.of(this.onDeleteFileError(action.payload.file)))\r\n    );\r\n\r\n\r\n  @Effect()\r\n  public uploadFile$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE)\r\n    .switchMap((action: IFileManagerAction) => this.uploadFile(action.payload.files[0])\r\n      .map((result: IOuterFile): IFileManagerAction => {\r\n        return this.fileManagerActions.uploadSuccess(result);\r\n      })\r\n      .catch(() => {\r\n        return Observable.empty()\r\n      })\r\n    );\r\n\r\n  public uploadError$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR)\r\n    .map((action: IFileManagerAction) => {\r\n      this.filemanagerNotfication.sendNotification({\r\n        type: 'alert',\r\n        title: 'File upload',\r\n        message: `${action.payload.file.name} exists on the server in this directory`\r\n      });\r\n    });\r\n\r\n  public cropFileSuccess$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS);\r\n\r\n\r\n  public cropFileError$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR)\r\n    .subscribe((action: IFileManagerAction) => {\r\n      this.onCropFileError(action.payload.file);\r\n    });\r\n\r\n  public deleteFileSuccess$ = this.actions$\r\n    .ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS);\r\n\r\n\r\n  protected cropFile(file: IFileModel, bounds: ICropBounds): Observable<IOuterFile> {\r\n    return this.fileManagerApiService.cropFile(file.toJSON(), bounds);\r\n  }\r\n\r\n  protected deleteFile(file: IFileModel): Observable<boolean> {\r\n    return this.fileManagerApiService.removeFile(file.toJSON());\r\n  }\r\n\r\n  protected loadFiles(folderId: string | null): Observable<IOuterFile[]> {\r\n    return this.fileManagerApiService.loadFiles(folderId);\r\n  }\r\n\r\n  protected uploadFile(file: IOuterFile): Observable<IOuterFile> {\r\n    return this.fileManagerApiService.uploadFile(file);\r\n  }\r\n\r\n  protected onCropFileError(file: IFileModel): void {\r\n    this.filemanagerNotfication.sendNotification({\r\n      type: 'alert',\r\n      title: 'Crop Image',\r\n      message: '[FILEMANAGER] Can not crop file'\r\n    });\r\n  }\r\n\r\n  protected onDeleteFileError(file: IFileModel): void {\r\n    this.filemanagerNotfication.sendNotification({\r\n      type: 'error',\r\n      title: 'Delete file',\r\n      message: '[FILEMANAGER] Can not delete file' + file.name\r\n    });\r\n  }\r\n\r\n  protected onLoadFilesError(folderId: string): void {\r\n    this.filemanagerNotfication.sendNotification({\r\n      type: 'error',\r\n      title: 'Load files',\r\n      message: '[FILEMANAGER] Can not load files for folder ' + folderId\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerEffects.service.ts","import {IOuterFile} from '../filesList/interface/IOuterFile';\r\nimport {FileManagerActionsService, IFileManagerAction} from './fileManagerActions.service';\r\nimport {State} from '@ngrx/store';\r\nimport {IFileModel} from '../filesList/interface/IFileModel';\r\nimport {FileModel} from '../filesList/file.model';\r\n\r\nexport interface IFileManagerState extends Array<IOuterFile> {\r\n}\r\n\r\n\r\nfunction cropFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  let newState = [...state];\r\n\r\n  for (let i in state) {\r\n    if (newState[i].id === action.payload.file.getId()) {\r\n      newState[i] = action.payload.file.toJSON();\r\n    }\r\n  }\r\n  return newState;\r\n}\r\n\r\nfunction inverseFilesSelection(state: IFileManagerState): IFileManagerState {\r\n  return state.map((file: IOuterFile) => {\r\n    file.selected = !file.selected;\r\n\r\n    return file;\r\n  });\r\n}\r\n\r\nfunction loadFiles(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  return [...action.payload.files];\r\n}\r\n\r\nfunction removeFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  let id = action.payload.file.getId();\r\n\r\n  return [...state.filter((file: IOuterFile) => file.id !== id)]\r\n}\r\n\r\nfunction removeSelectedFiles(state: IFileManagerState): IFileManagerState {\r\n  return [...state.filter((file: IOuterFile) => !file.selected)]\r\n}\r\n\r\nfunction selectFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  return state.map((file: IOuterFile) => {\r\n    if (file.id === action.payload.file.getId()) {\r\n      file.selected = true;\r\n\r\n      return copyOuterFile(file);\r\n    }\r\n\r\n    return file;\r\n  });\r\n}\r\n\r\nfunction selectAllFiles(state: IFileManagerState): IFileManagerState {\r\n  let newState = [...state];\r\n  return newState.map((file: IOuterFile) => {\r\n    file.selected = true;\r\n\r\n    return file;\r\n  });\r\n}\r\n\r\nfunction uploadFiles(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  return [...state, ...action.payload.files];\r\n}\r\n\r\nfunction unSelectAllFiles(state: IFileManagerState): IFileManagerState {\r\n  return state.map((file: IOuterFile) => {\r\n    file.selected = false;\r\n\r\n    return file;\r\n  });\r\n}\r\n\r\nfunction unSelectFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\r\n  const file = getFileById(state, action.payload.file.getId());\r\n\r\n  file.selected = false;\r\n\r\n  return [...state];\r\n}\r\n\r\n\r\nfunction getFileById(state: IFileManagerState, id: string | number): IOuterFile {\r\n  const files = state.filter((file: IOuterFile) => file.id === id);\r\n\r\n  return files.length > 0 ? files[0] : null;\r\n}\r\n\r\n\r\nfunction copyOuterFile(inputFile: IOuterFile): IOuterFile {\r\n  let {id, folderId, name,  thumbnailUrl,  url,  width,  height,  type,  data, size,  selected} = inputFile;\r\n\r\n  return <IOuterFile>{id, folderId, name,  thumbnailUrl,  url,  width,  height,  type,  data, size,  selected};\r\n}\r\n\r\n\r\nexport function fileManagerReducer(state: IFileManagerState = [], action: IFileManagerAction): IFileManagerState {\r\n  switch (action.type) {\r\n    case FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS:\r\n      return cropFile(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_INVERSE_FILE_SELECTION:\r\n      return inverseFilesSelection(state);\r\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION:\r\n      return removeSelectedFiles(state);\r\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS:\r\n      return removeFile(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_LOAD_FILES_SUCCESS:\r\n      return loadFiles(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_SELECT_ALL:\r\n      return selectAllFiles(state);\r\n    case FileManagerActionsService.FILEMANAGER_SELECT_FILE:\r\n      return selectFile(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_UNSELECT_ALL:\r\n      return unSelectAllFiles(state);\r\n    case FileManagerActionsService.FILEMANAGER_UNSELECT_FILE:\r\n      return unSelectFile(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_SUCCESS:\r\n      return uploadFiles(state, action);\r\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS:\r\n    case FileManagerActionsService.FILEMANAGER_CROP_FILE:\r\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE:\r\n    case FileManagerActionsService.FILEMANAGER_LOAD_FILES:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/store/fileManagerReducer.ts","module.exports = \"<div class=\\\"btn-group\\\">\\r\\n  <button *ngFor=\\\"let type of typeFilterList\\\" class=\\\"btn btn-default\\\" [ngClass]=\\\"{'active': type === selectedType}\\\"\\r\\n          (click)=\\\"setFilterType(type)\\\">\\r\\n    <i class=\\\"{{type.iconCls}}\\\"></i>\\r\\n  </button>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.html\n// module id = ../../../../../src/toolbar/fileTypeFilter/fileTypeFilter.component.html\n// module chunks = 1","import {Component, Input, OnInit} from '@angular/core';\r\nimport {IFileTypeFilter} from '../interface/IFileTypeFilter';\r\nimport {FileTypeFilterService} from '../../services/fileTypeFilter.service';\r\n\r\n@Component({\r\n  selector: 'ri-file-type-filter',\r\n  templateUrl: './fileTypeFilter.component.html'\r\n})\r\n\r\nexport class FileTypeFilterComponent implements OnInit {\r\n  @Input() typeFilterList: IFileTypeFilter[] = [];\r\n\r\n  public selectedType: IFileTypeFilter = null;\r\n\r\n  constructor(private fileTypeFilter: FileTypeFilterService) {\r\n    this.fileTypeFilter.filter$\r\n      .subscribe((type: IFileTypeFilter | null) => {\r\n        this.selectedType = type;\r\n      })\r\n  }\r\n\r\n  ngOnInit() {\r\n    /** init file type filter **/\r\n    this.typeFilterList\r\n      .filter((type: IFileTypeFilter) => {\r\n        return type.defaultSelected;\r\n      })\r\n      .forEach((type: IFileTypeFilter) => {\r\n        this.fileTypeFilter.setValue(type);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Set current filter and fire event\r\n   * @param type\r\n   */\r\n  public setFilterType(type: IFileTypeFilter) {\r\n    this.fileTypeFilter.setValue(type);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.ts","export class Button {\r\n  static ADD_FOLDER: string = 'ADD_FOLDER';\r\n  static DELETE_SELECTION: string = 'DELETE_SELECTION';\r\n  static INVERSE_SELECTION: string = 'INVERSE_SELECTION';\r\n  static REFRESH_FILES_LIST: string = 'REFRESH_FILES_LIST';\r\n  static SELECT_ALL: string = 'SELECT_ALL';\r\n  static UNSELECT_ALL: string = 'UNSELECT_ALL';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/toolbar/models/button.model.ts","import {IToolbarEvent} from \"../interface/IToolbarEvent\";\r\n\r\nexport class ToolbarEventModel implements IToolbarEvent {\r\n  constructor(public name: string, public value: string = null) {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/toolbar/models/toolbarEvent.model.ts","module.exports = \"<div class=\\\"input-group\\\">\\r\\n  <input [formControl]=\\\"searchField\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search for...\\\">\\r\\n  <span class=\\\"input-group-btn\\\">\\r\\n      <button (click)=\\\"searchField.reset('')\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">\\r\\n          <i class=\\\"fa fa-times\\\"></i>\\r\\n      </button>\\r\\n  </span>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/toolbar/searchFile/searchFile.component.html\n// module id = ../../../../../src/toolbar/searchFile/searchFile.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {SearchFilterService} from '../../services/searchFilter.service';\r\n\r\n@Component({\r\n  selector: 'ri-search-file',\r\n  templateUrl: './searchFile.component.html'\r\n})\r\n\r\nexport class SearchFileComponent implements OnInit {\r\n\r\n  public searchField = new FormControl();\r\n\r\n  constructor(private searchFilterService: SearchFilterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.searchField.valueChanges\r\n      .debounceTime(250)\r\n      .subscribe((value: string) => this.searchFilterService.setValue(value));\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/toolbar/searchFile/searchFile.component.ts","import {Component, EventEmitter, Output, Input, OnChanges} from '@angular/core';\r\nimport {IButton} from '../dropdown/IButton';\r\nimport {Button} from './models/button.model';\r\nimport {ToolbarEventModel} from './models/toolbarEvent.model';\r\nimport {IToolbarEvent} from './interface/IToolbarEvent';\r\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\r\nimport {FileManagerUploader} from '../filesList/fileManagerUploader.service';\r\nimport {FileManagerDispatcherService} from '../store/fileManagerDispatcher.service';\r\n\r\n@Component({\r\n  selector: 'toolbar',\r\n  styleUrls: ['./toolbar.less'],\r\n  templateUrl: './toolbar.html'\r\n})\r\n\r\nexport class ToolbarComponent implements OnChanges {\r\n  @Input() currentFolderId: string;\r\n\r\n  @Output() onAddFolderClick = new EventEmitter();\r\n  @Output() onUpload = new EventEmitter();\r\n  @Output() onMenuButtonClick = new EventEmitter();\r\n\r\n  public selectAllButton: IButton = {\r\n    symbol: Button.SELECT_ALL,\r\n    name: 'Select all',\r\n    label: false,\r\n    icon: true,\r\n    iconCssClass: 'fa fa-check-square-o'\r\n  };\r\n\r\n  public selectButtonsList: IButton[] = [\r\n    {symbol: Button.SELECT_ALL, name: 'Select all', label: true, icon: true, iconCssClass: 'fa fa-check-square-o'},\r\n    {symbol: Button.UNSELECT_ALL, name: 'Unselect all', label: true, icon: true, iconCssClass: 'fa fa-square-o'},\r\n    {\r\n      symbol: Button.INVERSE_SELECTION,\r\n      name: 'Inverse selection',\r\n      label: true,\r\n      icon: true,\r\n      iconCssClass: 'fa fa-check-square'\r\n    }\r\n  ];\r\n\r\n  public constructor(public configuration: FileManagerConfiguration,\r\n                     public fileManagerUploader: FileManagerUploader,\r\n                     private fileManagerDispatcher: FileManagerDispatcherService) {\r\n\r\n    this.fileManagerUploader.clear();\r\n\r\n    this.fileManagerUploader.uploader.onCompleteAll = () => {\r\n      this.onUpload.emit(this.currentFolderId || '');\r\n    };\r\n\r\n\r\n    this.fileManagerUploader.uploader.onCompleteItem = (item: any, response: any, status: number, headers: any) => {\r\n      if (status === 200) {\r\n        this.fileManagerDispatcher.upload(JSON.parse(response));\r\n      } else {\r\n        this.fileManagerDispatcher.uploadError(JSON.parse(response));\r\n      }\r\n    };\r\n  }\r\n\r\n  public ngOnChanges() {\r\n    this.fileManagerUploader.setDirectoryId(this.currentFolderId || '');\r\n  }\r\n\r\n  public addFolder() {\r\n    let event: IToolbarEvent = new ToolbarEventModel(Button.ADD_FOLDER, 'Nowy folder');\r\n    this.onAddFolderClick.emit(event);\r\n  }\r\n\r\n  public onSelectDropdownClick(button: IButton) {\r\n    let event: IToolbarEvent = new ToolbarEventModel(button.symbol);\r\n    this.onMenuButtonClick.emit(event);\r\n  }\r\n\r\n  public onRefreshFilesList() {\r\n    let event: IToolbarEvent = new ToolbarEventModel(Button.REFRESH_FILES_LIST);\r\n    this.onMenuButtonClick.emit(event);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.component.ts","module.exports = \"<div class=\\\"toolbar row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"addFolder()\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i>\\r\\n        <i class=\\\"fa fa-folder-o\\\"></i>\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"fileInput.click()\\\">\\r\\n        <i class=\\\"fa fa-plus\\\"></i>\\r\\n        <i class=\\\"fa fa-file-o\\\"></i>\\r\\n      </button>\\r\\n      <span class=\\\"hidden-input-file\\\">\\r\\n        <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"fileManagerUploader.uploader\\\" (onCompleteAll)=\\\"onUpload()\\\" (onCompleteItem)=\\\"onUploadItem()\\\" multiple/>\\r\\n      </span>\\r\\n    </div>\\r\\n    <ri-dropdown *ngIf=\\\"configuration.isMultiSelection\\\" [mainButton]=\\\"selectAllButton\\\" [buttons]=\\\"selectButtonsList\\\"\\r\\n              (onClick)=\\\"onSelectDropdownClick($event)\\\"></ri-dropdown>\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"onRefreshFilesList()\\\">\\r\\n        <i class=\\\"fa fa-refresh\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <ri-file-type-filter [typeFilterList]=\\\"configuration.fileTypesFilter\\\"></ri-file-type-filter>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <ri-search-file></ri-search-file>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.html\n// module id = ../../../../../src/toolbar/toolbar.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar {\\n  margin-bottom: 10px;\\n}\\n.btn {\\n  height: 34px;\\n}\\n.btn-file {\\n  position: relative;\\n  overflow: hidden;\\n}\\n.hidden-input-file {\\n  visibility: hidden;\\n  position: absolute;\\n  overflow: hidden;\\n  width: 0;\\n  height: 0;\\n  border: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/ECTSP/angular2-filemanager/src/toolbar/toolbar.less\n// module id = ../../../../../src/toolbar/toolbar.less\n// module chunks = 1"],"sourceRoot":"webpack:///"}