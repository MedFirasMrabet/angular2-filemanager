{"version":3,"sources":["/home/www/projects/angular2-filemanager/demo/src/$_gendir lazy","/home/www/projects/angular2-filemanager/demo/src/app/app.component.html","/home/www/projects/angular2-filemanager/demo/src/app/app.component.less","/home/www/projects/angular2-filemanager/demo/src/app/app.component.ts","/home/www/projects/angular2-filemanager/demo/src/app/app.module.ts","/home/www/projects/angular2-filemanager/demo/src/environments/environment.ts","/home/www/projects/angular2-filemanager/demo/src/main.ts","/home/www/projects/angular2-filemanager/main.ts","/home/www/projects/angular2-filemanager/src/configuration/fileManagerConfiguration.service.ts","/home/www/projects/angular2-filemanager/src/configuration/tree.service.ts","/home/www/projects/angular2-filemanager/src/crop/crop.component.ts","/home/www/projects/angular2-filemanager/src/crop/crop.less","/home/www/projects/angular2-filemanager/src/decorators/logFunction.decorator.ts","/home/www/projects/angular2-filemanager/src/dropdown/AbstractButton.class.ts","/home/www/projects/angular2-filemanager/src/dropdown/Button.class.ts","/home/www/projects/angular2-filemanager/src/dropdown/ButtonDivider.class.ts","/home/www/projects/angular2-filemanager/src/dropdown/dropdown.component.ts","/home/www/projects/angular2-filemanager/src/dropdown/dropdown.html","/home/www/projects/angular2-filemanager/src/dropdown/dropdown.less","/home/www/projects/angular2-filemanager/src/filemanager.component.ts","/home/www/projects/angular2-filemanager/src/filemanager.html","/home/www/projects/angular2-filemanager/src/filemanager.module.ts","/home/www/projects/angular2-filemanager/src/filesList/file.model.ts","/home/www/projects/angular2-filemanager/src/filesList/file/file.component.html","/home/www/projects/angular2-filemanager/src/filesList/file/file.component.ts","/home/www/projects/angular2-filemanager/src/filesList/fileManagerUploader.service.ts","/home/www/projects/angular2-filemanager/src/filesList/files-list.less","/home/www/projects/angular2-filemanager/src/filesList/files.html","/home/www/projects/angular2-filemanager/src/filesList/filesList.component.ts","/home/www/projects/angular2-filemanager/src/main.less","/home/www/projects/angular2-filemanager/src/preview/preview.component.ts","/home/www/projects/angular2-filemanager/src/preview/preview.html","/home/www/projects/angular2-filemanager/src/services/FilemanagerNotifcations.ts","/home/www/projects/angular2-filemanager/src/services/currentDirectoryFiles.service.ts","/home/www/projects/angular2-filemanager/src/services/extendedFileUplaoder.service.ts","/home/www/projects/angular2-filemanager/src/services/fileTypeFilter.service.ts","/home/www/projects/angular2-filemanager/src/services/imageDataConverter.service.ts","/home/www/projects/angular2-filemanager/src/services/searchFilter.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerActions.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerApi.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerApiAbstract.class.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerBackendApi.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerDispatcher.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerEffects.service.ts","/home/www/projects/angular2-filemanager/src/store/fileManagerReducer.ts","/home/www/projects/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.html","/home/www/projects/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.ts","/home/www/projects/angular2-filemanager/src/toolbar/models/button.model.ts","/home/www/projects/angular2-filemanager/src/toolbar/models/toolbarEvent.model.ts","/home/www/projects/angular2-filemanager/src/toolbar/searchFile/searchFile.component.html","/home/www/projects/angular2-filemanager/src/toolbar/searchFile/searchFile.component.ts","/home/www/projects/angular2-filemanager/src/toolbar/selectionDropDown/selection.component.ts","/home/www/projects/angular2-filemanager/src/toolbar/selectionDropDown/selection.dropdown.html","/home/www/projects/angular2-filemanager/src/toolbar/toolbar.component.ts","/home/www/projects/angular2-filemanager/src/toolbar/toolbar.html","/home/www/projects/angular2-filemanager/src/toolbar/toolbar.less"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../demo/src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/demo/src/$$_gendir lazy\n// module id = ../../../../../demo/src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <h1>Filemanager</h1>\\n    <div class=\\\"configuration-bar\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"toggleMultiSelection()\\\">\\n            <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-check-square': this.fileManagerConfiguration.isMultiSelection, 'fa-square': !this.fileManagerConfiguration.isMultiSelection}\\\"></i>\\n            <span>Use multiselection</span>\\n        </button>\\n    </div>\\n    <ri-filemanager>Loading...</ri-filemanager>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/demo/src/app/app.component.html\n// module id = ../../../../../demo/src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".configuration-bar {\\n  margin: 10px 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/demo/src/app/app.component.less\n// module id = ../../../../../demo/src/app/app.component.less\n// module chunks = main","import {Component} from '@angular/core';\nimport {FileManagerConfiguration, FileManagerDispatcherService} from '../../../main';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  public constructor(public fileManagerConfiguration: FileManagerConfiguration,\n                     private fileManagerDispatcher: FileManagerDispatcherService) {\n  }\n\n  public toggleMultiSelection() {\n    this.fileManagerConfiguration.isMultiSelection = !this.fileManagerConfiguration.isMultiSelection;\n\n    if (!this.fileManagerConfiguration.isMultiSelection) {\n      this.fileManagerDispatcher.unSelectAllFiles();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/demo/src/app/app.component.ts","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {AppComponent} from './app.component';\nimport {FileManagerModule, IFileManagerConfiguration} from '../../../main';\nimport {TranslateModule, TranslateService} from 'ng2-translate';\nimport {HttpClientModule} from '@angular/common/http';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreModule} from '@ngrx/store';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TreeModule} from '@rign/angular2-tree';\n\nconst fileManagerConfiguration: IFileManagerConfiguration = {\n  urls: {\n    foldersUrl: '/api/folder',\n    filesUrl: null,\n    folderMoveUrl: '/api/folder/move'\n  },\n  isMultiSelection: true,\n  mimeTypes: ['image/jpg', 'image/jpeg', 'image/png'],\n  maxFileSize: 50 * 1024\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    EffectsModule.forRoot([]),\n    FileManagerModule.forRoot(fileManagerConfiguration),\n    FormsModule,\n    HttpClientModule,\n    StoreModule.forRoot({}),\n    TreeModule.forRoot(),\n    TranslateModule.forRoot(),\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  public constructor(translate: TranslateService) {\n    translate.use('en');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/demo/src/app/app.module.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/demo/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/demo/src/main.ts","import {AbstractFileManagerApiService} from './src/store/fileManagerApiAbstract.class';\nimport {FileManagerActionsService} from './src/store/fileManagerActions.service';\nimport {FileManagerApiService} from './src/store/fileManagerApi.service';\nimport {FileManagerBackendApiService} from './src/store/fileManagerBackendApi.service';\nimport {FileManagerComponent} from './src/filemanager.component';\nimport {FileManagerConfiguration} from './src/configuration/fileManagerConfiguration.service';\nimport {FileManagerDispatcherService} from './src/store/fileManagerDispatcher.service';\nimport {FileManagerModule} from './src/filemanager.module';\nimport {FilemanagerNotifcations} from './src/services/FilemanagerNotifcations';\nimport {FileManagerUploader} from './src/filesList/fileManagerUploader.service';\nimport {ISelectFile} from './src/filesList/interface/ISelectFile';\nimport {IOuterFile} from './src/filesList/interface/IOuterFile';\nimport {IFileDataProperties} from './src/services/imageDataConverter.service';\nimport {IFileManagerApi} from './src/store/IFileManagerApi';\nimport {IFileManagerConfiguration} from './src/configuration/IFileManagerConfiguration';\nimport {ICropBounds} from './src/crop/ICropBounds';\n\nexport {\n  AbstractFileManagerApiService,\n  FileManagerActionsService,\n  FileManagerModule,\n  FileManagerBackendApiService,\n  FileManagerComponent,\n  FileManagerConfiguration,\n  FileManagerDispatcherService,\n  FileManagerUploader,\n  FilemanagerNotifcations,\n  FileManagerApiService,\n  ICropBounds,\n  IFileDataProperties,\n  IFileManagerApi,\n  IFileManagerConfiguration,\n  IOuterFile,\n  ISelectFile\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/main.ts","import {IContextMenu} from '@rign/angular2-tree';\nimport {Injectable, Inject} from '@angular/core';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\nimport {ICropSize} from '../crop/ICropSize';\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\n\n@Injectable()\nexport class FileManagerConfiguration {\n\n  public allowedCropSize: ICropSize[] = [\n    {\n      name: 'RI_FM_BTN_LANDSCAPE',\n      width: 300,\n      height: 100\n    },\n    {\n      name: 'RI_FM_BTN_PORTRAIT',\n      width: 200,\n      height: 300\n    }\n  ];\n\n  public contextMenuItems: IContextMenu[] = [];\n\n  public fileTypesFilter: IFileTypeFilter[] = [\n    {\n      name: 'ALL',\n      mimes: [],\n      iconCls: 'fa fa-file-o',\n      text: 'All files',\n      defaultSelected: true\n    },\n    {\n      name: 'IMAGES',\n      mimes: ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'],\n      iconCls: 'fa fa-picture-o',\n      text: 'Images'\n    },\n    {\n      name: 'AUDIO',\n      mimes: ['audio/mpeg', 'audio/x-ms-wma', 'audio/vnd.rn-realaudio', 'audio/x-wav', 'audio/mp3'],\n      iconCls: 'fa fa-file-audio-o',\n      text: 'Audio'\n    },\n    {\n      name: 'VIDEO',\n      mimes: ['video/mpeg', 'video/mp4', 'video/quicktime', 'video/x-ms-wmv'],\n      iconCls: 'fa fa-file-video-o',\n      text: 'Video'\n    },\n    {\n      name: 'ARCHIVE',\n      mimes: ['application/zip'],\n      iconCls: 'fa fa-file-archive-o',\n      text: 'Archive'\n    }\n  ];\n\n  public folderUrls: {foldersUrl: string, folderMoveUrl: string};\n  public fileUrl = '/api/files';\n\n  public isMultiSelection: boolean;\n\n  public maxFileSize: number;\n\n  public mimeTypes: string[] | null;\n\n  constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\n    const {foldersUrl, folderMoveUrl} = configuration.urls;\n    this.folderUrls = {foldersUrl, folderMoveUrl};\n    this.fileUrl = configuration.urls.filesUrl;\n    this.isMultiSelection = configuration.isMultiSelection || false;\n    this.maxFileSize = configuration.maxFileSize || 0;\n    this.mimeTypes = configuration.mimeTypes || null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/configuration/fileManagerConfiguration.service.ts","import {Injectable, Inject} from '@angular/core';\nimport {NodeService} from '@rign/angular2-tree';\nimport {Http} from '@angular/http';\nimport {IFileManagerConfiguration} from './IFileManagerConfiguration';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class TreeService extends NodeService {\n  public constructor(protected http: HttpClient, @Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration) {\n    super(http);\n\n    this.apiConfig = {\n      addUrl: configuration.urls.foldersUrl,\n      getUrl: configuration.urls.foldersUrl,\n      updateUrl: configuration.urls.foldersUrl,\n      removeUrl: configuration.urls.foldersUrl,\n      moveUrl: configuration.urls.folderMoveUrl\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/configuration/tree.service.ts","import {\n  Component, Input, ViewChild, ViewContainerRef, ComponentFactoryResolver, Output,\n  EventEmitter, AfterContentInit\n} from '@angular/core';\nimport {FileModel} from '../filesList/file.model';\nimport {CropperSettings} from 'ng2-img-cropper/src/cropperSettings';\nimport {ImageCropperComponent} from 'ng2-img-cropper/src/imageCropperComponent';\nimport {ICropSize} from './ICropSize';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {Bounds} from 'ng2-img-cropper/src/model/bounds';\nimport {ICropBounds} from './ICropBounds';\nimport {FileManagerDispatcherService} from '../store/fileManagerDispatcher.service';\n\n@Component({\n  selector: 'crop-image',\n  styleUrls: ['./crop.less'],\n  template: `\n    <div class=\"crop-image\">\n      <div class=\"crop-workbench\">\n        <div #container></div>\n      </div>\n      <div class=\"btn-toolbar\">\n        <div class=\"btn-group\">\n          <button class=\"btn btn-primary\" *ngFor=\"let cropSize of cropSizeList\" (click)=\"updateCropSize(cropSize)\"\n                  [ngClass]=\"{'active': cropSize == currentCropSize}\">{{cropSize.name | translate}}\n          </button>\n        </div>\n        <div class=\"btn-group pull-right\">\n          <button class=\"btn btn-success btn-icon\" (click)=\"cropImage()\">\n            <i class=\"fa fa-check\"></i>\n            <span>{{'RI_FM_BTN_SAVE' | translate}}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  `\n})\n\nexport class CropComponent implements AfterContentInit {\n  @Input() file: FileModel;\n\n  @Output() onCrop = new EventEmitter();\n\n  @ViewChild('container', {read: ViewContainerRef})\n  public container: ViewContainerRef;\n\n  @ViewChild('cropper')\n  public cropper: ImageCropperComponent;\n\n  private bounds: Bounds;\n\n  public cropSizeList: ICropSize[];\n  public currentCropSize: ICropSize;\n\n  constructor(private resolver: ComponentFactoryResolver,\n              private configuration: FileManagerConfiguration,\n              private fileManagerDispatcher: FileManagerDispatcherService) {\n    this.cropSizeList = configuration.allowedCropSize;\n  }\n\n  updateCropSize(cropSize: ICropSize) {\n    let image = new Image();\n    const cropperComponent = this.resolver.resolveComponentFactory(ImageCropperComponent);\n    const cropperComponentRef = this.container.createComponent(cropperComponent);\n\n    if (this.container.length > 1) {\n      this.container.detach(0);\n    }\n\n    this.currentCropSize = cropSize;\n    cropperComponentRef.instance.settings = this.getCropperSettings();\n    cropperComponentRef.instance.image = {};\n    cropperComponentRef.instance.onCrop\n      .subscribe((bounds: Bounds) => this.bounds = bounds);\n\n    setTimeout(() => {\n      image.src = this.file.url;\n      cropperComponentRef.instance.setImage(image);\n    });\n  }\n\n  ngAfterContentInit() {\n    this.updateCropSize(this.cropSizeList[0]);\n  };\n\n  public cropImage() {\n    let bounds: ICropBounds = {\n      x: this.bounds.left,\n      y: this.bounds.top,\n      width: this.bounds.width,\n      height: this.bounds.height\n    };\n\n    this.fileManagerDispatcher.cropFile(this.file, bounds);\n  }\n\n\n  private getCropperSettings() {\n    let cropperSettings = new CropperSettings();\n    let scale = this.calculateScale();\n    let width = scale * this.file.getWidth();\n    let height = scale * this.file.getHeight();\n\n    cropperSettings.noFileInput = true;\n    cropperSettings.width = this.currentCropSize.width;\n    cropperSettings.height = this.currentCropSize.height;\n    cropperSettings.canvasWidth = width;\n    cropperSettings.canvasHeight = height;\n\n    return cropperSettings;\n  }\n\n  /**\n   * Calculates scale between current file dimensions and box 600x600\n   * @returns {number}\n   */\n  private calculateScale(): number {\n    let scale = this.file.getWidth() / this.file.getHeight();\n\n    if (scale > 1) {\n      if (this.file.getWidth() > 600) {\n        return 600 / this.file.getWidth();\n      }\n    } else {\n      if (this.file.getHeight() > 600) {\n        return 600 / this.file.getHeight();\n      }\n    }\n\n    return 1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/crop/crop.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-toolbar {\\n  margin: 5px 0;\\n}\\n.btn-toolbar .btn-group {\\n  margin: 0;\\n}\\n.crop-workbench {\\n  width: 600px;\\n  height: 400px;\\n  text-align: center;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/crop/crop.less\n// module id = ../../../../../src/crop/crop.less\n// module chunks = main","import {environment} from '../../demo/src/environments/environment';\n\nexport function log(target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) {\n    let originalMethod = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n        let eventObject = args[0];\n\n        if (!environment.production) {\n            console.log(eventObject);\n        }\n\n        return originalMethod.apply(this, args);\n    };\n\n\n    return descriptor;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/decorators/logFunction.decorator.ts","import {IButton, IButtonData} from './IButton';\n\nexport abstract class AbstractButtonClass implements IButton {\n  public symbol: string;\n  public name: string;\n  public label: boolean;\n  public icon: boolean;\n  public iconCssClass: string;\n  public disabled?: boolean;\n\n  public constructor(data: IButtonData) {\n    this.symbol = data.symbol;\n    this.name = data.name;\n    this.label = data.label;\n    this.icon = data.icon;\n    this.iconCssClass = data.iconCssClass;\n    this.disabled = data.disabled;\n  }\n\n  abstract isDivider(): boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/dropdown/AbstractButton.class.ts","import {AbstractButtonClass} from './AbstractButton.class';\n\nexport class ButtonClass extends AbstractButtonClass {\n  public isDivider(): boolean {\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/dropdown/Button.class.ts","import {AbstractButtonClass} from './AbstractButton.class';\n\nexport class ButtonDividerClass extends AbstractButtonClass {\n  public constructor() {\n    super({\n      symbol: '',\n      name: '',\n      label: false,\n      icon: false,\n      iconCssClass: ''\n    })\n  }\n\n  public isDivider(): boolean {\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/dropdown/ButtonDivider.class.ts","import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {IButtonData} from './IButton';\n\n@Component({\n  selector: 'ri-dropdown',\n  styleUrls: ['./dropdown.less'],\n  templateUrl: './dropdown.html'\n})\n\nexport class DropdownComponent {\n  @Input() mainButton: IButtonData;\n  @Input() buttons: IButtonData[];\n  @Input() displayMainButtonLabel: boolean;\n\n  @Output() onClick = new EventEmitter();\n\n  public isOpen = false;\n\n  public hide(): void {\n    this.isOpen = false;\n  }\n\n  public selectButton(button: IButtonData): void {\n    this.hide();\n    this.onClick.emit(button);\n  }\n\n  public toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/dropdown/dropdown.component.ts","module.exports = \"<div class=\\\"btn-group dropdown\\\" [ngClass]=\\\"{'open': isOpen}\\\">\\n  <button class=\\\"btn btn-default\\\" [ngClass]=\\\"{disabled: mainButton.disabled}\\\" (click)=\\\"selectButton(mainButton)\\\">\\n    <span *ngIf=\\\"displayMainButtonLabel\\\">{{mainButton.name}}</span>\\n    <i *ngIf=\\\"mainButton.icon\\\" class=\\\"{{mainButton.iconCssClass}}\\\"></i>\\n  </button>\\n  <button class=\\\"btn btn-default dropdown-toggle\\\" [ngClass]=\\\"{disabled: mainButton.disabled}\\\" (click)=\\\"toggleOpen()\\\">\\n    <span class=\\\"caret\\\"></span>\\n  </button>\\n  <ul class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"single-button\\\" (mouseleave)=\\\"hide()\\\">\\n    <li role=\\\"menuitem\\\" [ngClass]=\\\"{divider: button.isDivider(), disabled: button.disabled}\\\" *ngFor=\\\"let button of buttons\\\">\\n      <a (click)=\\\"selectButton(button)\\\" *ngIf=\\\"!button.isDivider()\\\">\\n        <span *ngIf=\\\"button.icon\\\" class=\\\"{{button.iconCssClass}}\\\"></span>\\n        <span *ngIf=\\\"button.label\\\">{{button.name | translate}}</span>\\n      </a>\\n    </li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/dropdown/dropdown.html\n// module id = ../../../../../src/dropdown/dropdown.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dropdown {\\n  display: inline-block;\\n  height: 34px;\\n}\\n.dropdown .btn {\\n  height: 34px;\\n}\\n.dropdown a {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/dropdown/dropdown.less\n// module id = ../../../../../src/dropdown/dropdown.less\n// module chunks = main","import {\n  Component, OnInit, ViewChild, HostListener, EventEmitter, Output\n} from '@angular/core';\nimport {\n  TreeComponent,\n  NodeService,\n  IContextMenu,\n  IOuterNode,\n  ITreeData,\n  ITreeState,\n  IConfiguration,\n  TreeModel,\n  TreeActionsService,\n  treeStateSelector,\n  NodeDispatcherService\n} from '@rign/angular2-tree';\nimport {FileModel} from './filesList/file.model';\nimport {log} from './decorators/logFunction.decorator';\nimport {NotificationsService} from 'angular2-notifications';\nimport {IFileEvent} from './filesList/interface/IFileEvent';\nimport {Button} from './toolbar/models/button.model';\nimport {FilesListComponent} from './filesList/filesList.component';\nimport {IToolbarEvent} from './toolbar/interface/IToolbarEvent';\nimport {IFileModel} from './filesList/interface/IFileModel';\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\nimport {Observable} from 'rxjs/Observable';\nimport {Store} from '@ngrx/store';\nimport {FileManagerDispatcherService} from './store/fileManagerDispatcher.service';\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\nimport {FileManagerApiService} from './store/fileManagerApi.service';\nimport {FilemanagerNotifcations, INotification} from './services/FilemanagerNotifcations';\nimport {CurrentDirectoryFilesService} from './services/currentDirectoryFiles.service';\nimport {filter, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'ri-filemanager',\n  providers: [NodeService, NotificationsService],\n  styleUrls: ['./main.less'],\n  templateUrl: './filemanager.html'\n})\nexport class FileManagerComponent implements OnInit {\n  @Output() onSingleFileSelect = new EventEmitter();\n\n  @ViewChild(TreeComponent)\n  public treeComponent: TreeComponent;\n\n  @ViewChild(FilesListComponent)\n  public filesList: FilesListComponent;\n\n  /**\n   * List of files for current selected directory\n   * @typeObserv {Array}\n   */\n  private files$: Observable<FileModel[]>;\n\n  public filteredFiles$: Observable<FileModel[]>;\n  public selectedFiles$: Observable<string[]>;\n\n  public folders: Observable<ITreeData>;\n\n\n  public treeConfiguration: IConfiguration = {\n    showAddButton: false,\n    disableMoveNodes: false,\n    treeId: 'tree',\n    dragZone: 'tree',\n    dropZone: ['tree']\n  };\n\n  public treeModel: TreeModel;\n\n  /** UNSED **/\n  public contextMenu: IContextMenu[] = [];\n\n  public currentSelectedFile: IFileModel;\n  public currentSelectedFiles: string[] = [];\n\n  public isPreviewMode = false;\n  public isCropMode = false;\n\n  public notificationOptions = {\n    position: ['bottom', 'right'],\n    timeOut: 3000,\n    lastOnBottom: false,\n    preventDuplicates: true,\n    rtl: false,\n    showProgressBar: true,\n    pauseOnHover: true\n  };\n\n  /**\n   * List of context menu\n   * @type {IContextMenu[]}\n   */\n  public menu: IContextMenu[];\n\n  public constructor(private store: Store<ITreeState>,\n                     private treeActions: TreeActionsService,\n                     private nodeDispatcherService: NodeDispatcherService,\n                     private treeService: FileManagerApiService,\n                     private notifications: NotificationsService,\n                     private configuration: FileManagerConfiguration,\n                     private fileManagerDispatcher: FileManagerDispatcherService,\n                     private fileManagerEffects: FileManagerEffectsService,\n                     private filemanagerNotifcations: FilemanagerNotifcations,\n                     private currentDirectoryFilesService: CurrentDirectoryFilesService) {\n\n    this.menu = configuration.contextMenuItems;\n\n    this.filemanagerNotifcations.getNotificationStream()\n      .subscribe((notification: INotification) => {\n        const {type, title, message} = notification;\n\n        this.notifications[type](title, message);\n      });\n\n    this.currentDirectoryFilesService.selectedFiles$\n      .subscribe((data: string[]) => {\n        this.currentSelectedFiles = data;\n      });\n  }\n\n  ngOnInit() {\n\n    /*** START - init TREE ***/\n    const treeId = this.treeConfiguration.treeId;\n    this.nodeDispatcherService.register(treeId, this.treeService);\n\n    this.store.dispatch(this.treeActions.registerTree(treeId));\n\n    this.folders = this.store.select(treeStateSelector)\n      .pipe(\n        map((data: ITreeState) => {\n          return data[treeId];\n        }),\n        filter((data: ITreeData) => !!data)\n      );\n\n    this.treeModel = new TreeModel(this.folders, this.treeConfiguration);\n    /*** END - init TREE ***/\n\n\n    /*** START - init files ***/\n    this.files$ = this.currentDirectoryFilesService.files$;\n    this.filteredFiles$ = this.currentDirectoryFilesService.filteredFiles$;\n    this.selectedFiles$ = this.currentDirectoryFilesService.selectedFiles$;\n\n\n    this.treeModel.currentSelectedNode$\n      .subscribe((node: IOuterNode | null) => {\n        this.loadFiles(node ? node.id : '');\n      });\n\n    /*** END - init files ***/\n\n    this.fileManagerEffects.cropFileSuccess$\n      .subscribe(() => {\n        this.closeModal();\n      });\n  }\n\n  get currentSelectedFolderId(): string | null {\n    const value = this.treeModel.currentSelectedNode$.getValue();\n\n    return value ? value.id : null;\n  }\n\n  @log\n  public onAddFolder() {\n    this.treeComponent.onAdd();\n  }\n\n  /***********************************************************************\n   * FILE EVENTS\n   **********************************************************************/\n  /**\n   * Run when all files are uploaded\n   * @param folderId\n   */\n  public onUpload(folderId: string) {\n    this.notifications.success('File upload', 'Upload complete');\n  }\n\n  @log\n  public onPreviewFile(fileEventData: IFileEvent) {\n    this.isPreviewMode = true;\n    this.currentSelectedFile = fileEventData.file;\n  }\n\n  @log\n  public onOpenCropFileEditor(fileEventData: IFileEvent) {\n    this.isCropMode = true;\n    this.currentSelectedFile = fileEventData.file;\n  }\n\n  @log\n  public onSelectFile(event: FileModel) {\n    this.onSingleFileSelect.next(event.getSelectData());\n  }\n\n  /***********************************************************************\n   * TOOLBAR EVENTS\n   **********************************************************************/\n\n  @log\n  public onMenuButtonClick(event: IToolbarEvent) {\n    switch (event.name) {\n      case Button.DELETE_SELECTION:\n        this.fileManagerDispatcher.deleteSelectedFiles(this.currentSelectedFiles);\n        break;\n      case Button.SELECT_ALL:\n        this.fileManagerDispatcher.selectAllFiles();\n        break;\n      case Button.UNSELECT_ALL:\n        this.fileManagerDispatcher.unSelectAllFiles();\n        break;\n      case Button.INVERSE_SELECTION:\n        this.fileManagerDispatcher.inverseSelection();\n        break;\n      case Button.REFRESH_FILES_LIST:\n        this.reloadFiles();\n        break;\n    }\n  }\n\n  /***********************************************************************\n   * OTHER FUNCTIONS\n   **********************************************************************/\n  @HostListener('window:keydown', ['$event'])\n  public keyEvents(event: KeyboardEvent) {\n    if (this.isPreviewMode || this.isCropMode) {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    }\n  }\n\n  public closeModal() {\n    this.isPreviewMode = false;\n    this.isCropMode = false;\n  }\n\n\n  private loadFiles(folderId: string) {\n    this.fileManagerDispatcher.loadFiles(folderId || '');\n  }\n\n  private reloadFiles() {\n    const node = this.treeModel.currentSelectedNode$.getValue();\n    const id = node ? node.id : '';\n\n    this.loadFiles(id);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filemanager.component.ts","module.exports = \"<div class=\\\"filemanager-container\\\">\\n  <div class=\\\"fm-header\\\">\\n    <ri-toolbar\\n      #toolbar\\n      [currentFolderId]=\\\"currentSelectedFolderId\\\"\\n      (onAddFolderClick)=\\\"onAddFolder($event)\\\"\\n      (onUpload)=\\\"onUpload($event)\\\"\\n      (onMenuButtonClick)=\\\"onMenuButtonClick($event)\\\"\\n    ></ri-toolbar>\\n  </div>\\n  <div class=\\\"fm-main-box\\\">\\n    <ri-tree class=\\\"folders-box\\\" [treeModel]=\\\"treeModel\\\"></ri-tree>\\n    <ri-files-list class=\\\"files-box\\\" [files]=\\\"filteredFiles$ | async\\\"\\n                   [selectedFiles]=\\\"selectedFiles$ | async\\\"\\n                (onPreviewFile)=\\\"onPreviewFile($event)\\\"\\n                (onCropFile)=\\\"onOpenCropFileEditor($event)\\\"\\n                (onSelectFile)=\\\"onSelectFile($event)\\\"\\n    ></ri-files-list>\\n  </div>\\n  <div *ngIf=\\\"isPreviewMode || isCropMode\\\" class=\\\"backdrop\\\">\\n    <div class=\\\"modal-view\\\">\\n      <div class=\\\"modal-close\\\">\\n        <i class=\\\"fa fa-2x fa-times\\\" (click)=\\\"closeModal()\\\"></i>\\n      </div>\\n      <ri-file-preview *ngIf=\\\"isPreviewMode\\\" [files]=\\\"filteredFiles$ | async\\\" [file]=\\\"currentSelectedFile\\\"></ri-file-preview>\\n      <crop-image *ngIf=\\\"isCropMode\\\" [file]=\\\"currentSelectedFile\\\"></crop-image>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/filemanager.html\n// module id = ../../../../../src/filemanager.html\n// module chunks = main","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, Provider, ModuleWithProviders} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TreeModule} from '@rign/angular2-tree';\nimport {NotificationsService, SimpleNotificationsModule} from 'angular2-notifications';\nimport {FileManagerComponent} from './filemanager.component';\nimport {ToolbarComponent} from './toolbar/toolbar.component';\nimport {FilesListComponent} from './filesList/filesList.component';\nimport {ImageCropperComponent} from 'ng2-img-cropper';\nimport {CropComponent} from './crop/crop.component';\nimport {PreviewComponent} from './preview/preview.component';\nimport {DropdownComponent} from './dropdown/dropdown.component';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {FileManagerConfiguration} from './configuration/fileManagerConfiguration.service';\nimport {FileManagerUploader} from './filesList/fileManagerUploader.service';\nimport {TreeService} from './configuration/tree.service';\nimport {EffectsModule} from '@ngrx/effects';\nimport {FileManagerEffectsService} from './store/fileManagerEffects.service';\nimport {StoreModule} from '@ngrx/store';\nimport {fileManagerReducer} from './store/fileManagerReducer';\nimport {FileManagerActionsService} from './store/fileManagerActions.service';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {FileTypeFilterService} from './services/fileTypeFilter.service';\nimport {SearchFilterService} from './services/searchFilter.service';\nimport {FileManagerDispatcherService} from './store/fileManagerDispatcher.service';\nimport {FileTypeFilterComponent} from './toolbar/fileTypeFilter/fileTypeFilter.component';\nimport {SearchFileComponent} from './toolbar/searchFile/searchFile.component';\nimport {FileManagerApiService} from './store/fileManagerApi.service';\nimport {ImageDataConverter} from './services/imageDataConverter.service';\nimport {FilemanagerNotifcations} from './services/FilemanagerNotifcations';\nimport {ConfirmationPopoverModule} from 'angular-confirmation-popover';\nimport {FileManagerBackendApiService} from './store/fileManagerBackendApi.service';\nimport {CurrentDirectoryFilesService} from './services/currentDirectoryFiles.service';\nimport {SelectionComponent} from './toolbar/selectionDropDown/selection.component';\nimport {FileComponent} from './filesList/file/file.component';\nimport {TranslateModule, TranslateService} from 'ng2-translate';\nimport {IFileManagerConfiguration} from './configuration/IFileManagerConfiguration';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfirmationPopoverModule.forRoot(),\n    EffectsModule.forFeature([FileManagerEffectsService]),\n    FormsModule,\n    FileUploadModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    SimpleNotificationsModule,\n    StoreModule.forFeature('files', fileManagerReducer),\n    StoreDevtoolsModule.instrument({}),\n    TranslateModule,\n    TreeModule\n  ],\n  declarations: [\n    FileManagerComponent,\n    FileComponent,\n    FileTypeFilterComponent,\n    ToolbarComponent,\n    FilesListComponent,\n    DropdownComponent,\n    PreviewComponent,\n    CropComponent,\n    ImageCropperComponent,\n    SearchFileComponent,\n    SelectionComponent,\n  ],\n  entryComponents: [ImageCropperComponent],\n  exports: [FileManagerComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class FileManagerModule {\n\n  public static forRoot(config: IFileManagerConfiguration, apiProvider: Provider = null): ModuleWithProviders {\n    return {\n      ngModule: FileManagerModule,\n      providers: [\n        CurrentDirectoryFilesService,\n        FileManagerActionsService,\n        FileManagerApiService,\n        FileManagerBackendApiService,\n        FileManagerConfiguration,\n        FileManagerDispatcherService,\n        FileManagerEffectsService,\n        FilemanagerNotifcations,\n        FileManagerUploader,\n        FileTypeFilterService,\n        ImageDataConverter,\n        NotificationsService,\n        SearchFilterService,\n        TreeService,\n        {provide: 'fileManagerConfiguration', useValue: config},\n        apiProvider ? apiProvider : FileManagerApiService\n      ]\n    }\n  }\n\n  public static forChild(config: IFileManagerConfiguration, apiProvider: Provider = null): ModuleWithProviders {\n    return {\n      ngModule: FileManagerModule,\n      providers: [\n        CurrentDirectoryFilesService,\n        FileManagerActionsService,\n        FileManagerApiService,\n        FileManagerBackendApiService,\n        FileManagerConfiguration,\n        FileManagerDispatcherService,\n        FileManagerEffectsService,\n        FilemanagerNotifcations,\n        FileManagerUploader,\n        FileTypeFilterService,\n        ImageDataConverter,\n        NotificationsService,\n        SearchFilterService,\n        TreeService,\n        {provide: 'fileManagerConfiguration', useValue: config},\n        apiProvider ? apiProvider : FileManagerApiService\n      ]\n    }\n  }\n\n  public constructor(private translate: TranslateService) {\n    this.setTranslationForEN();\n    this.setTranslationForPL();\n    this.translate.use('en');\n  }\n\n  private setTranslationForPL(): void {\n    this.translate.setTranslation('pl', {\n      RI_TREE_LBL_ADD_NODE: 'Dodaj',\n      RI_TREE_LBL_EDIT_NODE: 'Edytuj',\n      RI_TREE_LBL_REMOVE_NODE: 'Usuń',\n      RI_TREE_LBL_DROP_ZONE: 'Upuść tutaj',\n      RI_FM_BTN_LANDSCAPE: 'Poziomo',\n      RI_FM_BTN_PORTRAIT: 'Pionowo',\n      RI_FM_BTN_SAVE: 'Zapisz',\n      RI_FM_LBL_DELETE_SELECTION: 'Usuń wybrane pliki',\n      RI_FM_LBL_INVERSE_SELECTION: 'Odróć zaznaczenie',\n      RI_FM_LBL_SEARCH_FOR: 'Szukaj...',\n      RI_FM_LBL_SELECT_ALL: 'Zaznacz wszystkie',\n      RI_FM_LBL_UNSELECT_ALL: 'Odznacz wszystkie',\n    });\n  }\n\n  private setTranslationForEN(): void {\n    this.translate.setTranslation('en', {\n      RI_TREE_LBL_ADD_NODE: 'Add data',\n      RI_TREE_LBL_EDIT_NODE: 'Edit data',\n      RI_TREE_LBL_REMOVE_NODE: 'Delete data',\n      RI_TREE_LBL_DROP_ZONE: 'Drop here to move data to root level',\n      RI_FM_BTN_LANDSCAPE: 'Landscape',\n      RI_FM_BTN_PORTRAIT: 'Portrait',\n      RI_FM_BTN_SAVE: 'Save',\n      RI_FM_LBL_DELETE_SELECTION: 'Delete selection',\n      RI_FM_LBL_INVERSE_SELECTION: 'Inverse selection',\n      RI_FM_LBL_SEARCH_FOR: 'Search for...',\n      RI_FM_LBL_SELECT_ALL: 'Select all',\n      RI_FM_LBL_UNSELECT_ALL: 'Unselect all',\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filemanager.module.ts","import {IOuterFile} from './interface/IOuterFile';\nimport {IFileModel} from './interface/IFileModel';\nimport {ISelectFile} from './interface/ISelectFile';\n\nexport class FileModel implements IFileModel {\n  static smallIconsFolder = '/icons/128px/';\n  static bigIconsFolder = '/icons/512px/';\n\n  private _orgData: IOuterFile;\n  private _name: string;\n\n  private _iconsFolder = FileModel.smallIconsFolder;\n\n  public selected = false;\n\n  set name(name: string) {\n    this._name = name;\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  get thumbnailUrl() {\n    return this.isImage() ? this._orgData.thumbnailUrl : `${FileModel.smallIconsFolder}${this.getFileExt()}.png`;\n  }\n\n  get url() {\n    return this.isImage() ? this._orgData.url : `${FileModel.bigIconsFolder}${this.getFileExt()}.png`;\n  }\n\n  public constructor(data: IOuterFile) {\n    this.fromJSON(data);\n  }\n\n  public fromJSON(data: IOuterFile) {\n    this._orgData = data;\n\n    this.name = data.name;\n    this.selected = data.selected || false;\n  }\n\n  public toJSON() {\n    return this._orgData;\n  }\n\n  public getId() {\n    return this._orgData.id;\n  }\n\n  public getHeight(): number {\n    return this._orgData.height || 0;\n  }\n\n  public getFileExt() {\n    return this.name.split('.').pop();\n  }\n\n  public getMime() {\n    return this._orgData.type;\n  }\n\n  public getWidth(): number {\n    return this._orgData.width || 0;\n  }\n\n  public isImage() {\n    return ['image/jpg', 'image/jpeg', 'image/png', 'image/gif', 'image/png'].indexOf(this.getMime()) > -1;\n  }\n\n  public getSelectData(): ISelectFile {\n    return {\n      id: this.getId(),\n      name: this.name,\n      url: this.url,\n      width: this.getWidth(),\n      height: this.getHeight(),\n      mime: this.getMime()\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filesList/file.model.ts","module.exports = \"<div *ngIf=\\\"configuration.isMultiSelection\\\" class=\\\"file-selection-input\\\">\\n  <i class=\\\"fa fa-2x checked fa-check-square-o\\\" (click)=\\\"unSelectFile()\\\"></i>\\n  <i class=\\\"fa fa-2x unchecked fa-square-o\\\" (click)=\\\"selectFile()\\\"></i>\\n</div>\\n<div class=\\\"img-rounded file-img\\\" [ngClass]=\\\"{'file-img-symbol': !file.isImage()}\\\"\\n     [style.background-image]=\\\"'url(' + file.thumbnailUrl + ')'\\\"></div>\\n<span class=\\\"file-name\\\">{{file.name}}</span>\\n<div class=\\\"file-menu\\\">\\n  <button mwlConfirmationPopover [title]=\\\"removeTitle\\\" [message]=\\\"getRemoveMessage(file)\\\" [appendToBody]=\\\"true\\\"\\n          [confirmText]=\\\"'Yes'\\\" [cancelText]=\\\"'No'\\\" placement=\\\"bottom\\\" (confirm)=\\\"deleteFile(file)\\\"\\n          class=\\\"btn btn-danger btn-icon\\\">\\n    <i class=\\\"fa fa-trash\\\"></i>\\n  </button>\\n  <button (click)=\\\"openPreview(file)\\\" class=\\\"btn btn-default btn-icon\\\">\\n    <i class=\\\"fa fa-search\\\"></i>\\n  </button>\\n  <button (click)=\\\"openCrop(file)\\\" class=\\\"btn btn-default btn-icon\\\">\\n    <i class=\\\"fa fa-crop\\\"></i>\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/filesList/file/file.component.html\n// module id = ../../../../../src/filesList/file/file.component.html\n// module chunks = main","import {Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation} from '@angular/core';\nimport {IFileModel} from '../interface/IFileModel';\nimport {FileManagerConfiguration} from '../../configuration/fileManagerConfiguration.service';\nimport {IFileEvent} from '../interface/IFileEvent';\nimport {FileManagerDispatcherService} from '../../store/fileManagerDispatcher.service';\n\n@Component({\n  selector: 'ri-file-component',\n  templateUrl: './file.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class FileComponent {\n  @Input() file: IFileModel;\n\n  @Output() onPreviewFile = new EventEmitter();\n  @Output() onCropFile = new EventEmitter();\n  @Output() onSelectFile = new EventEmitter();\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private fileManagerDispatcher: FileManagerDispatcherService) {\n  }\n\n  /**\n   * Fired when clicked on button \"delete file\"\n   *\n   * @param file\n   */\n  public deleteFile(file: IFileModel) {\n    this.fileManagerDispatcher.deleteFile(file);\n  }\n\n  public getRemoveMessage(file: IFileModel) {\n    return 'You are try to delete <b>' + file.name + '</b>. Are you sure?';\n  }\n\n  public openPreview(): void {\n    let fileEvent: IFileEvent = {\n      eventName: 'onPreviewFile',\n      file: this.file\n    };\n    this.onPreviewFile.emit(fileEvent);\n  }\n\n  public openCrop(): void {\n    let fileEvent: IFileEvent = {\n      eventName: 'onCropFile',\n      file: this.file\n    };\n    this.onCropFile.emit(fileEvent);\n  }\n\n  public selectFile(): void {\n    this.fileManagerDispatcher.selectFile(this.file);\n  }\n\n  public unSelectFile(): void {\n    this.fileManagerDispatcher.unSelectFile(this.file);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filesList/file/file.component.ts","import {Injectable, Inject} from '@angular/core';\nimport {ExtendedFileUploader} from '../services/extendedFileUplaoder.service';\nimport {IFileManagerConfiguration} from '../configuration/IFileManagerConfiguration';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {FileUploaderOptions} from 'ng2-file-upload';\n\n@Injectable()\nexport class FileManagerUploader {\n  public uploader: ExtendedFileUploader;\n\n  public constructor(@Inject('fileManagerConfiguration') configuration: IFileManagerConfiguration,\n                     filemanagerNotification: FilemanagerNotifcations) {\n    const options: FileUploaderOptions = {\n      allowedMimeType: configuration.mimeTypes,\n      url: configuration.urls.filesUrl,\n      maxFileSize: configuration.maxFileSize\n    };\n\n    this.uploader = new ExtendedFileUploader(options, filemanagerNotification);\n  }\n\n  public clear() {\n    this.uploader.authToken = null;\n    this.uploader.setOptions(this.getDefaultOptions());\n  }\n\n  public getDefaultOptions() {\n    let options = {};\n    options['removeAfterUpload'] = true;\n    options['autoUpload'] = true;\n    options['method'] = 'POST';\n\n    return options;\n  }\n\n  public setAuthorizationToken(token: string) {\n    this.uploader.authToken = token;\n  }\n\n  public setDirectoryId(directoryId: string | number): FileManagerUploader {\n    let options = this.getDefaultOptions();\n\n    options['headers'] = [{name: 'folderId', value: directoryId.toString()}];\n\n    this.uploader.setOptions(options);\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filesList/fileManagerUploader.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".files-list .file {\\n  display: inline-block;\\n  position: relative;\\n  cursor: pointer;\\n  text-align: center;\\n  width: 140px;\\n  height: 110px;\\n  padding: 5px;\\n  border: 1px solid #cccccc;\\n  background-color: #eee;\\n  border-radius: 10px;\\n  margin: 0 0 20px 20px;\\n}\\n.files-list .file .file-img {\\n  width: 128px;\\n  height: 98px;\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n}\\n.files-list .file .file-img.file-img-symbol {\\n  background-size: contain;\\n  background-position-x: 50%;\\n}\\n.files-list .file .file-name {\\n  display: none;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  text-align: center;\\n  background-color: rgba(238, 238, 238, 0.5);\\n}\\n.files-list .file .file-menu {\\n  display: none;\\n  position: absolute;\\n  top: 30%;\\n  left: 0;\\n  right: 0;\\n  text-align: center;\\n}\\n.files-list .file .file-selection-input {\\n  display: none;\\n  position: absolute;\\n  top: 3px;\\n  left: 3px;\\n  cursor: pointer;\\n  z-index: 10;\\n}\\n.files-list .file .file-selection-input .checked {\\n  display: none;\\n}\\n.files-list .file .file-selection-input .unchecked {\\n  display: block;\\n}\\n.files-list .file:hover .file-img {\\n  opacity: 0.3;\\n}\\n.files-list .file:hover .file-name,\\n.files-list .file:hover .file-menu,\\n.files-list .file:hover .file-selection-input {\\n  display: block;\\n}\\n.files-list .file.selected {\\n  border-color: #fff33a;\\n  background-color: rgba(255, 243, 58, 0.5);\\n}\\n.files-list .file.selected .file-name {\\n  background-color: rgba(255, 243, 58, 0.5);\\n}\\n.files-list .file.selected .file-menu,\\n.files-list .file.selected .file-selection-input {\\n  display: none;\\n}\\n.files-list .file.selected .file-selection-input .checked {\\n  display: block;\\n}\\n.files-list .file.selected .file-selection-input .unchecked {\\n  display: none;\\n}\\n.files-list .file.selected:hover .file-selection-input {\\n  display: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/filesList/files-list.less\n// module id = ../../../../../src/filesList/files-list.less\n// module chunks = main","module.exports = \"<div class=\\\"files-list\\\">\\n  <div class=\\\"file\\\" *ngFor=\\\"let file of files\\\" [ngClass]=\\\"{'selected': isSelected(file)}\\\"  riDraggable [data]=\\\"file.toJSON()\\\" [sourceType]=\\\"'FILE'\\\" [dragZone]=\\\"'tree'\\\">\\n    <ri-file-component [file]=\\\"file\\\" (onPreviewFile)=\\\"openPreview($event)\\\" (onCropFile)=\\\"openCrop($event)\\\"></ri-file-component>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/filesList/files.html\n// module id = ../../../../../src/filesList/files.html\n// module chunks = main","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {FileModel} from './file.model';\nimport {IFileEvent} from './interface/IFileEvent';\nimport {IFileModel} from './interface/IFileModel';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {IFileManagerAction} from '../store/fileManagerActions.service';\nimport {FileManagerDispatcherService} from '../store/fileManagerDispatcher.service';\nimport {NotificationsService} from 'angular2-notifications';\nimport {FileManagerEffectsService} from '../store/fileManagerEffects.service';\n\n@Component({\n  selector: 'ri-files-list',\n  templateUrl: './files.html',\n  styleUrls: ['./files-list.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class FilesListComponent {\n  @Input() files: FileModel[];\n  @Input() selectedFiles: string[];\n\n  @Output() onPreviewFile = new EventEmitter();\n  @Output() onCropFile = new EventEmitter();\n  @Output() onSelectFile = new EventEmitter();\n\n  public removeTitle = 'Remove file';\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private fileManagerDispatcher: FileManagerDispatcherService,\n                     notifications: NotificationsService,\n                     fileManagerEffects: FileManagerEffectsService) {\n\n    fileManagerEffects.deleteFileSuccess$\n      .subscribe((action: IFileManagerAction) => {\n        notifications.success('File delete', `${action.payload.file.name} has been deleted`);\n      });\n  }\n\n  /**\n   * Fired when clicked on button \"delete file\"\n   *\n   * @param file\n   */\n  public deleteFile(file: IFileModel) {\n    this.fileManagerDispatcher.deleteFile(file);\n  }\n\n  public getRemoveMessage(file: IFileModel) {\n    return 'You are try to delete <b>' + file.name + '</b>. Are you sure?';\n  }\n\n  public openPreview(fileEvent: IFileEvent): void {\n    this.onPreviewFile.emit(fileEvent);\n  }\n\n  public openCrop(fileEvent: IFileEvent): void {\n    this.onCropFile.emit(fileEvent);\n  }\n\n  public toggleSelection(file: IFileModel): void {\n    console.log(file);\n    if (file.selected) {\n      this.fileManagerDispatcher.unSelectFile(file);\n    } else {\n      this.fileManagerDispatcher.selectFile(file);\n    }\n  }\n\n  public isSelected(file: FileModel): boolean {\n    return this.selectedFiles.indexOf(file.getId().toString()) > -1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/filesList/filesList.component.ts","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".filemanager-container {\\n  width: 990px;\\n  height: 700px;\\n}\\n.filemanager-container .tree .dropdown {\\n  position: relative;\\n}\\n.filemanager-container .tree .dropdown-menu {\\n  position: fixed !important;\\n}\\n.fm-main-box {\\n  position: relative;\\n  height: 100%;\\n}\\n.fm-main-box .folders-box {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 300px;\\n  overflow: hidden;\\n  overflow-y: auto;\\n}\\n.fm-main-box .files-box {\\n  display: block;\\n  position: absolute;\\n  left: 300px;\\n  top: 0;\\n  bottom: 0;\\n  overflow: hidden;\\n  overflow-y: auto;\\n}\\n.backdrop {\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  z-index: 1000;\\n}\\n.modal-view {\\n  margin: 50px auto;\\n  max-width: 600px;\\n}\\n.modal-view .modal-close {\\n  text-align: right;\\n  margin: 5px 0;\\n  color: #fff;\\n}\\n.modal-view .modal-close .fa {\\n  cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/main.less\n// module id = ../../../../../src/main.less\n// module chunks = main","import {Component, Input, OnChanges, HostListener} from '@angular/core';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {FileModel} from '../filesList/file.model';\n\n@Component({\n  selector: 'ri-file-preview',\n  templateUrl: './preview.html'\n})\n\nexport class PreviewComponent implements OnChanges {\n  /**\n   * Collection of files\n   */\n  @Input() files: IFileModel[];\n\n  /**\n   * Current viewed file\n   */\n  @Input() file: IFileModel;\n\n  /**\n   * Current index\n   * @type {number}\n   */\n  public currentIndex = 0;\n\n  private length = 0;\n\n  ngOnChanges() {\n    this.length = this.files.length;\n\n    const selectedFiles = this.files\n      .filter((file: FileModel) => file.getId() === this.file.getId());\n\n    this.currentIndex = selectedFiles.length === 1 ? this.files.indexOf(selectedFiles[0]) : -1;\n  }\n\n  public next() {\n    if (this.currentIndex < this.length - 1) {\n      this.currentIndex++;\n    }\n  }\n\n  public prev() {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    }\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  public keyEvent(event: KeyboardEvent) {\n    if (event.keyCode === 37 || event.keyCode === 74) {\n      this.prev();\n    }\n\n    if (event.keyCode === 39 || event.keyCode === 75) {\n      this.next();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/preview/preview.component.ts","module.exports = \"<div class=\\\"filemanager-preview\\\">\\n  <div class=\\\"carousel slide\\\">\\n    <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\n      <div class=\\\"item\\\" *ngFor=\\\"let file of files; let i = index;\\\" [ngClass]=\\\"{'active': i == currentIndex}\\\">\\n        <img class=\\\"img-rounded\\\" src=\\\"{{file.url}}\\\" alt=\\\"{{file.name}}\\\" style=\\\"margin: 0 auto;\\\">\\n        <div class=\\\"carousel-caption\\\">{{file.name}}</div>\\n      </div>\\n    </div>\\n    <a class=\\\"left carousel-control\\\" role=\\\"button\\\" (click)=\\\"prev()\\\" *ngIf=\\\"currentIndex != 0\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-left\\\" aria-hidden=\\\"true\\\"></span>\\n    </a>\\n    <a class=\\\"right carousel-control\\\"role=\\\"button\\\" (click)=\\\"next()\\\" *ngIf=\\\"currentIndex + 1 < length\\\">\\n      <span class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span>\\n    </a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/preview/preview.html\n// module id = ../../../../../src/preview/preview.html\n// module chunks = main","import {Subject} from 'rxjs/Subject';\n\nexport interface INotification {\n  type: 'alert' | 'error' | 'success';\n  title: string;\n  message?: string;\n}\n\nexport class FilemanagerNotifcations {\n  private notifciation$ = new Subject<INotification>();\n\n  public sendNotification(notification: INotification): void {\n    this.notifciation$.next(notification);\n  }\n\n  public getNotificationStream(): Subject<INotification> {\n    return this.notifciation$;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/FilemanagerNotifcations.ts","import {ITreeState} from '@rign/angular2-tree';\nimport {SearchFilterService} from './searchFilter.service';\nimport {FileTypeFilterService} from './fileTypeFilter.service';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport {FileModel} from '../filesList/file.model';\nimport {filemanagerStateSelector, getAll, IFileManagerState, storeEntities} from '../store/fileManagerReducer';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\nimport {Injectable} from '@angular/core';\nimport {distinctUntilChanged, map, withLatestFrom} from 'rxjs/operators';\nimport 'rxjs/add/observable/combineLatest';\n\n@Injectable()\nexport class CurrentDirectoryFilesService {\n\n  /**\n   * List of all files\n   */\n  public files$: Observable<FileModel[]>;\n\n  /**\n   * List of files for current selected directory\n   */\n  public filteredFiles$: Observable<FileModel[]>;\n\n  /**\n   * List of all files as JSON data\n   */\n  public entities$: Observable<storeEntities>;\n\n  /**\n   * List of selected file ids\n   */\n  public selectedFiles$: Observable<string[]>;\n\n  /**\n   * List of all files in current directory\n   */\n  public currentDirectoryFileIds$: Observable<string[]>;\n\n  /**\n   * @param {Store<ITreeState>} store\n   * @param {FileTypeFilterService} fileTypeFilter\n   * @param {SearchFilterService} searchFilterService\n   */\n  public constructor(private store: Store<IFileManagerState>,\n                     private fileTypeFilter: FileTypeFilterService,\n                     private searchFilterService: SearchFilterService) {\n\n    const store$ = this.store.select(filemanagerStateSelector);\n    const observable$ = store$;\n    this.entities$ = observable$\n      .pipe(\n        map((state: IFileManagerState) => state.entities),\n        distinctUntilChanged()\n      );\n\n    this.currentDirectoryFileIds$ = observable$\n      .pipe(\n        map((state: IFileManagerState) => state.files),\n        distinctUntilChanged()\n      );\n\n    this.selectedFiles$ = store$\n      .pipe(\n        map((state: IFileManagerState) => state.selectedFiles)\n      );\n\n    this.files$ = this.getFilesStream();\n    this.filteredFiles$ = this.getCurrentDirectoryFilesStream();\n  }\n\n  /**\n   * Return stream of files\n   *\n   * @returns {Observable<FileModel[]>}\n   */\n  private getFilesStream(): Observable<FileModel[]> {\n    return this.currentDirectoryFileIds$\n      .pipe(\n        withLatestFrom(this.entities$),\n        map((ar: any) => {\n          return {\n            entities: ar[1],\n            files: ar[0]\n          };\n        }),\n        map((state: any) => {\n          return getAll(state)\n            .map((file: IOuterFile) => {\n              return new FileModel(file);\n            });\n        })\n      );\n  }\n\n  /**\n   * Return stream of current directory filtered files\n   *\n   * @returns {Observable<FileModel[]>}\n   */\n  private getCurrentDirectoryFilesStream(): Observable<FileModel[]> {\n    return Observable.combineLatest(\n      this.files$,\n      this.fileTypeFilter.filter$,\n      this.searchFilterService.filter$\n    )\n      .pipe(\n        map((data: [FileModel[], IFileTypeFilter, string]): FileModel[] => {\n          let files = data[0];\n          const fileTypeFilter = data[1];\n          const search = data[2].toLocaleLowerCase();\n\n          if (search !== '') {\n            files = files.filter((file: FileModel) => {\n              return file.name.toLocaleLowerCase().indexOf(search) > -1;\n            });\n          }\n\n\n          if (fileTypeFilter && fileTypeFilter.mimes.length > 0) {\n            files = files.filter((file: FileModel) => {\n              return fileTypeFilter.mimes.indexOf(file.getMime()) > -1;\n            });\n          }\n\n          return files;\n        })\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/currentDirectoryFiles.service.ts","import {FileItem, FileUploader, FileUploaderOptions} from 'ng2-file-upload';\nimport {IFileDataProperties, ImageDataConverter} from './imageDataConverter.service';\nimport {FilemanagerNotifcations, INotification} from './FilemanagerNotifcations';\nimport {FileLikeObject} from 'ng2-file-upload/file-upload/file-like-object.class';\n\nexport class ExtendedFileUploader extends FileUploader {\n\n  public constructor(options: FileUploaderOptions, private filemanagerNotification: FilemanagerNotifcations) {\n    super(options);\n  }\n\n  public onWhenAddingFileFailed(item: FileLikeObject, filter: any, options: FileUploaderOptions) {\n    const notification: INotification = {\n      type: 'alert',\n      title: 'Add file to queue',\n      message: `File not add to queue`\n    };\n\n    if (filter.name === 'fileSize') {\n      notification.message = `File size is too large - max size  is ${options.maxFileSize / 1024} KB`;\n    } else {\n      notification.message = `File mime type \"${item.type}\" is not allowed`;\n    }\n    this.filemanagerNotification.sendNotification(notification)\n  }\n\n  public uploadItem(value: FileItem): void {\n    if (this.options.url) {\n      super.uploadItem(value);\n    } else {\n      let imageDataConverter = new ImageDataConverter();\n      this._onProgressItem(value, 0);\n\n      if (this.isUploading) {\n        return;\n      }\n\n      this.isUploading = true;\n\n      const header = this.options.headers.find((object: any) => object.name === 'folderId');\n\n      this._onProgressItem(value, 50);\n      imageDataConverter.getProperties(value._file, header.value)\n        .subscribe((file: IFileDataProperties) => {\n          this.isUploading = false;\n\n          this._onProgressItem(value, 100);\n          this._onCompleteItem(value, JSON.stringify(file), 200, {});\n        })\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/extendedFileUplaoder.service.ts","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {IFileTypeFilter} from '../toolbar/interface/IFileTypeFilter';\n\n@Injectable()\nexport class FileTypeFilterService {\n\n  /**\n   * File type filter\n   * @type {BehaviorSubject}\n   */\n  public filter$: BehaviorSubject<IFileTypeFilter | null> = new BehaviorSubject(null);\n\n  public getValue(): IFileTypeFilter | null {\n    return this.filter$.getValue();\n  }\n\n  public setValue(value: IFileTypeFilter | null) {\n    this.filter$.next(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/fileTypeFilter.service.ts","import {Observable} from 'rxjs/Observable';\nimport {UUID} from 'angular2-uuid';\nimport {Injectable} from '@angular/core';\nimport {concatMap, map} from 'rxjs/operators';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/of';\n\nexport interface IFileDataProperties {\n  id: string | number;\n  folderId: string;\n  name: string;\n  size: number;\n  data: string;\n  type: string;\n  width?: number;\n  height?: number;\n  selected?: boolean;\n}\n\nexport interface IImageDimensions {\n  width: number;\n  height: number;\n}\n\n@Injectable()\nexport class ImageDataConverter {\n  /**\n   * @param {File} file\n   * @param {string} folderId\n   * @returns {Observable<IFileDataProperties>}\n   */\n  public getProperties(file: File, folderId: string): Observable<IFileDataProperties> {\n    let properties: IFileDataProperties = {\n      id: UUID.UUID(),\n      folderId: folderId,\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      data: ''\n    };\n\n    let reader = this.getBase64FromFile(file);\n\n    return reader\n      .pipe(\n        concatMap((data: string) => {\n          properties.data = data;\n\n          if (properties.type.indexOf('image') === 0) {\n            return this.getImageDimensions(data);\n          } else {\n            return Observable.of({width: 0, height: 0});\n          }\n        }),\n        map((dimensions: IImageDimensions) => {\n          properties.width = dimensions.width;\n          properties.height = dimensions.height;\n\n          return properties;\n        })\n\n      )\n  }\n\n  /**\n   * Create observable which return image as base64 data\n   *\n   * @param file\n   * @return Observable<string>\n   */\n  private getBase64FromFile(file: File): Observable<string> {\n    let reader = new FileReader();\n    reader.readAsDataURL(file);\n\n\n    return Observable\n      .fromEvent(reader, 'load')\n      .pipe(\n        map(() => {\n          return reader.result;\n        })\n      );\n  };\n\n  /**\n   * Create observable which return dimensions of the image\n   *\n   * @param data\n   * @returns {Observable<IImageDimensions>}\n   */\n  private getImageDimensions(data: string): Observable<IImageDimensions> {\n    let image = new Image();\n    image.src = data;\n    image.style.display = 'none';\n\n    const loadImage = Observable.fromEvent(image, 'load')\n      .map(() => {\n        return {\n          width: image.naturalWidth,\n          height: image.naturalHeight\n        }\n      });\n\n    document.body.appendChild(image);\n\n    return loadImage;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/imageDataConverter.service.ts","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class SearchFilterService {\n  /**\n   * File type filter\n   * @type {BehaviorSubject}\n   */\n  public filter$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  public getValue(): string {\n    return this.filter$.getValue();\n  }\n\n  public setValue(value: string) {\n    this.filter$.next(value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/services/searchFilter.service.ts","import {Injectable} from '@angular/core';\nimport {Action} from '@ngrx/store';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {ICropBounds} from '../crop/ICropBounds';\n\nexport interface IFileManagerPayloadData {\n  folderId?: string;\n  files?: IOuterFile[];\n  file?: IFileModel;\n  fileIds?: string[];\n  bounds?: ICropBounds;\n}\n\nexport interface IFileManagerAction extends Action {\n  payload: IFileManagerPayloadData;\n}\n\n@Injectable()\nexport class FileManagerActionsService {\n  static FILEMANAGER_CROP_FILE = 'FILEMANAGER_CROP_FILE';\n  static FILEMANAGER_CROP_FILE_SUCCESS = 'FILEMANAGER_CROP_FILE_SUCCESS';\n  static FILEMANAGER_CROP_FILE_ERROR = 'FILEMANAGER_CROP_FILE_ERROR';\n  static FILEMANAGER_DELETE_FILE = 'FILEMANAGER_DELETE_FILE';\n  static FILEMANAGER_DELETE_FILE_SUCCESS = 'FILEMANAGER_DELETE_FILE_SUCCESS';\n  static FILEMANAGER_DELETE_FILE_SELECTION = 'FILEMANAGER_DELETE_FILE_SELECTION';\n  static FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS = 'FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS';\n  static FILEMANAGER_INVERSE_FILE_SELECTION = 'FILEMANAGER_INVERSE_FILE_SELECTION';\n  static FILEMANAGER_LOAD_FILES = 'FILEMANAGER_LOAD_FILES';\n  static FILEMANAGER_LOAD_FILES_SUCCESS = 'FILEMANAGER_LOAD_FILES_SUCCESS';\n  static FILEMANAGER_MOVE_FILES_SUCCESS = 'FILEMANAGER_MOVE_FILES_SUCCESS';\n  static FILEMANAGER_MOVE_FILES_ERROR = 'FILEMANAGER_MOVE_FILES_ERROR';\n  static FILEMANAGER_SELECT_ALL = 'FILEMANAGER_SELECT_ALL';\n  static FILEMANAGER_SELECT_FILE = 'FILEMANAGER_SELECT_FILE';\n  static FILEMANAGER_UNSELECT_FILE = 'FILEMANAGER_UNSELECT_FILE';\n  static FILEMANAGER_UNSELECT_ALL = 'FILEMANAGER_UNSELECT_ALL';\n  static FILEMANAGER_UPLOAD_FILE = 'FILEMANAGER_UPLOAD_FILE';\n  static FILEMANAGER_UPLOAD_FILE_ERROR = 'FILEMANAGER_UPLOAD_FILE_ERROR';\n  static FILEMANAGER_UPLOAD_FILE_SUCCESS = 'FILEMANAGER_UPLOAD_FILE_SUCCESS';\n\n  public cropFile(file: IFileModel, bounds: ICropBounds): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE,\n      payload: {\n        file: file,\n        bounds: bounds\n      }\n    };\n  }\n\n  public cropFileSuccess(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public cropFileError(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public deleteFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public deleteFileSuccess(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public deleteSelectedFiles(fileIds: string[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION,\n      payload: {fileIds}\n    };\n  }\n\n  public deleteSelectedFilesSuccess(files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS,\n      payload: {files}\n    };\n  }\n\n  public loadFiles(folderId: string): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES,\n      payload: {\n        folderId: folderId\n      }\n    };\n  }\n\n  public inverseFileSelection(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_INVERSE_FILE_SELECTION,\n      payload: {}\n    };\n  }\n\n  public loadFilesSuccess(folderId: string, files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_LOAD_FILES_SUCCESS,\n      payload: {\n        folderId: folderId,\n        files: files\n      }\n    };\n  }\n\n  public moveFileSuccess(files: IOuterFile[], folderId: string) {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_MOVE_FILES_SUCCESS,\n      payload: {folderId, files}\n    };\n  }\n\n  public moveFileError(files: IOuterFile[]): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_MOVE_FILES_ERROR,\n      payload: {files}\n    };\n  }\n\n  public selectAllFiles(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_SELECT_ALL,\n      payload: {}\n    };\n  }\n\n  public selectFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_SELECT_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public unSelectAll(): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_ALL,\n      payload: {}\n    };\n  }\n\n  public unSelectFile(file: IFileModel): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UNSELECT_FILE,\n      payload: {\n        file: file\n      }\n    };\n  }\n\n  public upload(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n\n  public uploadSuccess(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_SUCCESS,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n\n  public uploadError(file: IOuterFile): IFileManagerAction {\n    return {\n      type: FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR,\n      payload: {\n        files: [file]\n      }\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerActions.service.ts","import {Injectable} from '@angular/core';\nimport {IOuterNode} from '@rign/angular2-tree';\nimport {Observable} from 'rxjs/Observable';\nimport {UUID} from 'angular2-uuid';\nimport {IFileManagerApi} from './IFileManagerApi';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {AbstractFileManagerApiService} from './fileManagerApiAbstract.class';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class FileManagerApiService extends AbstractFileManagerApiService implements IFileManagerApi {\n\n  public constructor(private filemanagerNotfication: FilemanagerNotifcations) {\n    super();\n  }\n\n\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    if (!this.nodes) {\n      this.nodes = this.getAllDataFromLocalStorage();\n    }\n\n    const nodes = this.getChildren(nodeId);\n\n    return Observable.of(nodes);\n  }\n\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    node.parentId = parentNodeId;\n    node.id = UUID.UUID();\n\n    this.nodes.push(node);\n\n    if (this.saveNodes()) {\n      return Observable.of(node);\n    } else {\n      return Observable.empty();\n    }\n\n  }\n\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : '';\n\n    const index = this.findIndexByNodeId(srcId);\n\n    this.nodes[index].parentId = targetId;\n\n    if (this.saveNodes()) {\n      return Observable.of(this.nodes[index]);\n    } else {\n      return Observable.empty();\n    }\n\n  }\n\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(node.id);\n\n    this.nodes[index] = node;\n\n    if (this.saveNodes()) {\n      return Observable.of(node);\n    } else {\n      return Observable.empty();\n    }\n  }\n\n  public remove(nodeId: string): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(nodeId);\n    const node = this.nodes[index];\n\n    const hasChildren = this.getChildren(nodeId).length > 0;\n\n    if (!hasChildren) {\n      this.nodes.splice(index, 1);\n\n      this.saveNodes();\n\n      return Observable.of(node);\n    } else {\n      return Observable.throw('Node is not empty');\n    }\n  }\n\n  /**\n   * Crop file\n   *\n   * @param {IOuterFile} file\n   * @param {ICropBounds} bounds\n   * @returns {Observable<IOuterFile>}\n   */\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\n    return Observable.throw('This functionality is not available with LocalStorage');\n  }\n\n  /**\n   * Load files from directory\n   *\n   * @param {string} nodeId\n   * @returns {Observable<IOuterFile[]>}\n   */\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\n    this.currentNodeId = nodeId;\n\n    if (!this.files) {\n      this.files = this.getAllFileDataFromLocalStorage();\n    }\n\n    const files = this.getFilesFromFolder(nodeId);\n\n    const newFiles: IOuterFile[] = files.map((file: IFileDataProperties) => {\n      return this.convertLocalData2IOuterFile(file);\n    });\n\n    return Observable.of(newFiles);\n  }\n\n  public removeFile(file: IOuterFile): Observable<boolean> {\n    const index = this.findIndexByFileId(file.id.toString());\n\n    if (index === -1) {\n      return Observable.of(false);\n    }\n\n    this.files.splice(index, 1);\n    this.saveFiles();\n\n    return Observable.of(true);\n  }\n\n  public removeSelectedFiles(selectedFiles: string[]) {\n    const numberOfFiles = this.files.length;\n\n    selectedFiles.forEach((fileId: string) => {\n      const index = this.findIndexByFileId(fileId);\n\n      if (index > -1) {\n        this.files.splice(index, 1);\n      }\n    });\n\n    this.saveFiles();\n\n    return Observable.of((this.files.length + selectedFiles.length === numberOfFiles));\n  }\n\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    const fileData = this.convertIOuterFile2LocalData(file);\n    this.files.push(fileData);\n\n    if (this.saveFiles()) {\n      return Observable.of(this.convertLocalData2IOuterFile(fileData));\n    } else {\n      return Observable.throw('Upload error');\n    }\n  }\n\n  /**\n   * @param {IOuterFile[]} files\n   * @param {IOuterNode} node\n   * @returns {Observable<IOuterFile[]>}\n   */\n  public moveFile(files: IOuterFile[], node: IOuterNode = null): Observable<IOuterFile[]> {\n    const ids: string[] = files.map(file => file.id.toString());\n    const folderId = node ? node.id.toString() : '';\n\n    const movedFiles = this.files.filter(file => ids.indexOf(file.id.toString()) > -1);\n    const errorMsg = 'Can not move file to the same folder';\n\n    let isMovedToSameFolder = false;\n\n    movedFiles.forEach((file) => {\n      if (node) {\n        if (node.id === file.folderId) {\n        }\n      } else {\n        if (file.folderId === '' || file.folderId === null) {\n          return Observable.throw(errorMsg);\n        }\n      }\n\n\n      file.folderId = folderId;\n    });\n\n    if (isMovedToSameFolder) {\n        return Observable.throw(errorMsg);\n    }\n\n    if (this.saveFiles()) {\n      return Observable.of(movedFiles.map(file => this.convertLocalData2IOuterFile(file)));\n    } else {\n      return Observable.throw('Move files error');\n    }\n  }\n\n  private findIndexByNodeId(nodeId: string): number {\n    return this.nodes.findIndex((node) => {\n      return node.id === nodeId;\n    });\n  }\n\n  private findIndexByFileId(fileId: string): number {\n    return this.files.findIndex((file) => file.id === fileId);\n  }\n\n  private getChildren(nodeId: string): IOuterNode[] {\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\n  }\n\n  private getFilesFromFolder(nodeId: string): IFileDataProperties[] {\n    return this.files.filter((file: IFileDataProperties) => file.folderId === nodeId);\n  }\n\n  protected getAllDataFromLocalStorage(): IOuterNode[] {\n    try {\n      const data = localStorage.getItem(this.treeName);\n\n      if (data) {\n        return JSON.parse(data);\n      }\n\n      return [];\n\n    } catch (e) {\n      return [];\n    }\n  }\n\n  protected getAllFileDataFromLocalStorage(): IFileDataProperties[] {\n    try {\n      const data = localStorage.getItem(this.fileManagerName);\n\n      if (data) {\n        return JSON.parse(data);\n      }\n\n      return [];\n\n    } catch (e) {\n      return [];\n    }\n  }\n\n  private saveNodes() {\n    try {\n      localStorage.setItem(this.treeName, JSON.stringify(this.nodes));\n\n      return true;\n    } catch (e) {\n      this.filemanagerNotfication.sendNotification({\n        type: 'error',\n        title: 'State is not saved.',\n        message: 'Reload previous state.'\n      });\n\n      this.files = null;\n      this.nodes = null;\n\n      this.load();\n\n      return false;\n    }\n  }\n\n  private saveFiles(): boolean {\n    try {\n      localStorage.setItem(this.fileManagerName, JSON.stringify(this.files));\n\n      return true;\n    } catch (e) {\n      this.filemanagerNotfication.sendNotification({\n        type: 'error',\n        title: 'State is not saved.',\n        message: 'Reload previous state.'\n      });\n\n      const nodeId = this.files[(this.files.length - 1)].folderId || null;\n\n      this.files = null;\n\n      this.load(nodeId);\n\n      return false;\n    }\n  }\n\n  /**\n   *\n   * @param file\n   * @returns {{id: string, folderId: string, name: string, thumbnailUrl: string, url: string, width: number, height: number, mime: string}}\n   */\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\n    return {\n      id: file.id,\n      folderId: file.folderId,\n      name: file.name,\n      thumbnailUrl: file.data,\n      url: file.data,\n      width: file.width,\n      height: file.height,\n      type: file.type,\n      size: file.size\n    };\n  }\n\n  /**\n   *\n   * @param file\n   * @returns {{id: (any|string), folderId: string, name: string, type: string, data: string, size: number}}\n   */\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\n    return {\n      id: file.id.toString(),\n      folderId: file.folderId,\n      name: file.name,\n      type: file.type,\n      data: file.data,\n      size: file.size,\n      width: file.width,\n      height: file.height\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerApi.service.ts","import {IOuterNode} from '@rign/angular2-tree';\nimport {IFileDataProperties} from '../services/imageDataConverter.service';\n\nexport abstract class AbstractFileManagerApiService {\n\n  protected treeName = 'fileManagerTree';\n  protected fileManagerName = 'fileManagerFiles';\n\n\n  protected nodes: IOuterNode[];\n  protected files: IFileDataProperties[];\n\n  protected currentNodeId = '';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerApiAbstract.class.ts","import {Injectable} from '@angular/core';\nimport {IOuterNode} from '@rign/angular2-tree';\nimport {Observable} from 'rxjs/Observable';\nimport {ICropBounds, IFileManagerApi, IOuterFile, IFileDataProperties} from '../../main';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {AbstractFileManagerApiService} from './fileManagerApiAbstract.class';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class FileManagerBackendApiService extends AbstractFileManagerApiService implements IFileManagerApi {\n\n  public constructor(private $http: HttpClient,\n                     private configuration: FileManagerConfiguration) {\n    super();\n    this.nodes = [];\n    this.files = [];\n  }\n\n  /**\n   * Load folder chidls for given folder id\n   *\n   * @param {string} nodeId\n   * @returns {Observable<IOuterNode[]>}\n   */\n  public load(nodeId = ''): Observable<IOuterNode[]> {\n    const nodeIds = this.nodes.map((node: IOuterNode) => node.id);\n\n    const params = new HttpParams().set('nodeId', nodeId || '');\n\n    return this.$http.get<IOuterNode[]>(this.configuration.folderUrls.foldersUrl, {params})\n      .map((nodes: IOuterNode[]) => {\n        nodes.forEach((node: IOuterNode) => {\n          if (nodeIds.indexOf(node.id) === -1) {\n            this.nodes.push(node);\n          } else {\n            const index = this.nodes.findIndex((item: IOuterNode) => node.id === item.id);\n            this.nodes[index] = node;\n          }\n        });\n\n        return nodes;\n      });\n  }\n\n  /**\n   * Create new folder\n   *\n   * @param {IOuterNode} node\n   * @param {string} parentNodeId\n   * @returns {Observable<IOuterNode>}\n   */\n  public add(node: IOuterNode, parentNodeId: string = null): Observable<IOuterNode> {\n    const data = {\n      node: node,\n      parentNodeId: parentNodeId\n    };\n\n    return this.$http.post<IOuterNode>(this.configuration.folderUrls.foldersUrl, data)\n      .map((newNode: IOuterNode) => {\n        this.nodes.push(newNode);\n\n        return newNode;\n      })\n\n  }\n\n  /**\n   * Move folder from source parent to target parent\n   *\n   * @param {IOuterNode} srcNode\n   * @param {IOuterNode} targetNode\n   * @returns {Observable<IOuterNode>}\n   */\n  public move(srcNode: IOuterNode, targetNode: IOuterNode | null): Observable<IOuterNode> {\n    const srcId = srcNode.id;\n    const targetId = targetNode ? targetNode.id : null;\n\n\n    return this.$http.put<IOuterNode>(this.configuration.folderUrls.folderMoveUrl, {source: srcId, target: targetId})\n      .map((movedNode: IOuterNode) => {\n        const index = this.findIndexByNodeId(srcId);\n        this.nodes[index].parentId = targetId;\n\n        return movedNode;\n      });\n  }\n\n  /**\n   * Update folder name\n   *\n   * @param {IOuterNode} node\n   * @returns {Observable<IOuterNode>}\n   */\n  public update(node: IOuterNode): Observable<IOuterNode> {\n    return this.$http.put<IOuterNode>(this.configuration.folderUrls.foldersUrl, node)\n      .map((newNode: IOuterNode) => {\n        const index = this.findIndexByNodeId(node.id);\n\n        this.nodes[index] = newNode;\n\n        return newNode;\n      });\n  }\n\n  /**\n   * Remove node by given id\n   *\n   * @param {string} nodeId\n   * @returns {Observable<IOuterNode>}\n   */\n  public remove(nodeId: string): Observable<IOuterNode> {\n    const index = this.findIndexByNodeId(nodeId);\n\n    const hasChildren = this.getChildren(nodeId).length > 0;\n\n    if (!hasChildren) {\n      const params = new HttpParams().set('nodeId', nodeId);\n\n      return this.$http.delete<IOuterNode>(this.configuration.folderUrls.foldersUrl, {params})\n        .map((removedNode: IOuterNode) => {\n          this.nodes.splice(index, 1);\n\n          return removedNode;\n        });\n    } else {\n      return Observable.throw('Node is not empty');\n    }\n  }\n\n  /**\n   * Crop file\n   *\n   * @param {IOuterFile} file\n   * @param {ICropBounds} bounds\n   * @returns {Observable<IOuterFile>}\n   */\n  public cropFile(file: IOuterFile, bounds: ICropBounds): Observable<IOuterFile> {\n    return this.$http.put<IOuterFile>(this.configuration.fileUrl, {id: file.id, bounds: bounds});\n  }\n\n  /**\n   * Load files from directory\n   *\n   * @param {string} nodeId\n   * @returns {Observable<IOuterFile[]>}\n   */\n  public loadFiles(nodeId = ''): Observable<IOuterFile[]> {\n    this.currentNodeId = nodeId;\n    const params = new HttpParams().set('dirId', nodeId);\n\n    return this.$http.get<IOuterFile[]>(this.configuration.fileUrl, {params})\n      .map((files: IOuterFile[]) => {\n        this.files = files.map((file: IOuterFile) => <IFileDataProperties>file);\n\n        return files;\n      })\n  }\n\n  /**\n   * Remove file from folder\n   *\n   * @param {IOuterFile} file\n   * @returns {Observable<boolean>}\n   */\n  public removeFile(file: IOuterFile): Observable<boolean> {\n    const index = this.findIndexByFileId(file.id.toString());\n\n    if (index === -1) {\n      return Observable.of(false);\n    }\n\n    const params = new HttpParams().set('id', file.id.toString());\n\n    return this.$http.delete<any>(this.configuration.fileUrl, {params})\n      .map(() => {\n        this.files.splice(index, 1);\n\n        return true;\n      });\n  }\n\n  public removeSelectedFiles(selectedFiles: string[]) {\n    const params = new HttpParams().set('id', selectedFiles.join('|'));\n\n    return this.$http.delete<any>(this.configuration.fileUrl, {params})\n      .map(() => {\n        selectedFiles.forEach((fileId: string) => {\n          const index = this.findIndexByFileId(fileId);\n\n          if (index > -1) {\n            this.files.splice(index, 1);\n          }\n        });\n\n        return true;\n      });\n  }\n\n  /**\n   * This method is success method, real upload is done in ExtendedFileUploader\n   * @param {IOuterFile} file\n   * @returns {Observable<IOuterFile>}\n   */\n  public uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    const fileData = <IFileDataProperties>file;\n    this.files.push(fileData);\n\n    return Observable.of(file);\n  }\n\n  /**\n   * @param {IOuterFile[]} files\n   * @param {IOuterNode} node\n   * @returns {Observable<IOuterFile[]>}\n   */\n  public moveFile(files: IOuterFile[], node: IOuterNode): Observable<IOuterFile[]> {\n    const ids: string[] = files.map(file => file.id.toString());\n\n    return this.$http.put<IOuterFile[]>(this.configuration.fileUrl, {files: ids, folderId: node ? node.id : ''});\n  }\n\n  /**\n   * @param {string} nodeId\n   * @returns {number}\n   */\n  private findIndexByNodeId(nodeId: string): number {\n    return this.nodes.findIndex((node) => {\n      return node.id === nodeId;\n    });\n  }\n\n  /**\n   * @param {string} fileId\n   * @returns {number}\n   */\n  private findIndexByFileId(fileId: string): number {\n    return this.files.findIndex((file) => file.id === fileId);\n  }\n\n  /**\n   * @param {string} nodeId\n   * @returns {IOuterNode[]}\n   */\n  private getChildren(nodeId: string): IOuterNode[] {\n    return this.nodes.filter((node: IOuterNode) => node.parentId === nodeId);\n  }\n\n  /**\n   * @param file\n   * @returns {{id: string, folderId: string, name: string, thumbnailUrl: string, url: string, width: number, height: number, mime: string}}\n   */\n  private convertLocalData2IOuterFile(file: IFileDataProperties): IOuterFile {\n    return {\n      id: file.id,\n      folderId: file.folderId,\n      name: file.name,\n      thumbnailUrl: file.data,\n      url: file.data,\n      width: file.width,\n      height: file.height,\n      type: file.type,\n      size: file.size\n    }\n  }\n\n  /**\n   * @param file\n   * @returns {{id: (any|string), folderId: string, name: string, type: string, data: string, size: number}}\n   */\n  private convertIOuterFile2LocalData(file: IOuterFile): IFileDataProperties {\n    return {\n      id: file.id.toString(),\n      folderId: file.folderId,\n      name: file.name,\n      type: file.type,\n      data: file.data,\n      size: file.size,\n      width: file.width,\n      height: file.height\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerBackendApi.service.ts","import {Injectable} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {IFileManagerState} from './fileManagerReducer';\nimport {FileManagerActionsService} from './fileManagerActions.service';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {ICropBounds} from '../crop/ICropBounds';\n\n@Injectable()\nexport class FileManagerDispatcherService {\n\n  constructor(private store: Store<IFileManagerState>, private fileManagerActions: FileManagerActionsService) {\n  }\n\n  public cropFile(file: IFileModel, bounds: ICropBounds): void {\n    this.store.dispatch(this.fileManagerActions.cropFile(file, bounds));\n  }\n\n  public deleteFile(file: IFileModel): void {\n    this.store.dispatch(this.fileManagerActions.deleteFile(file));\n  }\n\n  public deleteSelectedFiles(files: string[]): void {\n    this.store.dispatch(this.fileManagerActions.deleteSelectedFiles(files));\n  }\n\n  public inverseSelection(): void {\n    this.store.dispatch(this.fileManagerActions.inverseFileSelection());\n  }\n\n  public loadFiles(folderId: string | null): void {\n    this.store.dispatch(this.fileManagerActions.loadFiles(folderId));\n  }\n\n  public selectAllFiles(): void {\n    this.store.dispatch(this.fileManagerActions.selectAllFiles());\n  }\n\n  public selectFile(file: IFileModel): void {\n    this.store.dispatch(this.fileManagerActions.selectFile(file));\n  }\n\n  public unSelectAllFiles(): void {\n    this.store.dispatch(this.fileManagerActions.unSelectAll());\n  }\n\n  public unSelectFile(file: IFileModel): void {\n    this.store.dispatch(this.fileManagerActions.unSelectFile(file));\n  }\n\n  public uploadError(file: IOuterFile) {\n    this.store.dispatch(this.fileManagerActions.uploadError(file));\n  }\n\n  public upload(file: IOuterFile) {\n    this.store.dispatch(this.fileManagerActions.upload(file));\n  }\n\n  public uploadSuccess(file: IOuterFile) {\n    this.store.dispatch(this.fileManagerActions.uploadSuccess(file));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerDispatcher.service.ts","import {Injectable} from '@angular/core';\nimport {Actions, Effect} from '@ngrx/effects';\nimport {ITreeAction, IOuterNode, TreeActionsService} from '@rign/angular2-tree';\nimport {FileManagerActionsService, IFileManagerAction} from './fileManagerActions.service';\nimport {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {Observable} from 'rxjs/Observable';\nimport {IFileModel} from '../filesList/interface/IFileModel';\nimport {ICropBounds} from '../crop/ICropBounds';\nimport {FileManagerApiService} from './fileManagerApi.service';\nimport {FilemanagerNotifcations} from '../services/FilemanagerNotifcations';\nimport {catchError, filter, map, switchMap} from 'rxjs/operators';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class FileManagerEffectsService {\n\n  @Effect()\n  public loadFiles$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_LOAD_FILES)\n    .pipe(\n      switchMap((action: IFileManagerAction) => this.loadFiles(action.payload.folderId)\n        .pipe(\n          map((files: IOuterFile[]): IFileManagerAction => {\n            return this.fileManagerActions.loadFilesSuccess(action.payload.folderId, files);\n          }),\n          catchError((e) => {\n            return Observable.of(this.onLoadFilesError(action.payload.folderId));\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public cropFile$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE)\n    .pipe(\n      switchMap((action: IFileManagerAction) => this.cropFile(action.payload.file, action.payload.bounds)\n        .pipe(\n          map((result: IOuterFile): IFileManagerAction => {\n            this.filemanagerNotfication.sendNotification({\n              type: 'success',\n              title: 'Crop Image.',\n              message: 'Image has been cropped.'\n            });\n            return this.fileManagerActions.cropFileSuccess(action.payload.file);\n          }),\n          catchError(() => Observable.of(this.fileManagerActions.cropFileError(action.payload.file)))\n        )\n      )\n    );\n\n  @Effect()\n  public deleteFile$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE)\n    .pipe(\n      switchMap((action: IFileManagerAction) => this.deleteFile(action.payload.file)\n        .pipe(\n          map((result: boolean): IFileManagerAction => {\n            return this.fileManagerActions.deleteFileSuccess(action.payload.file);\n          }),\n          catchError(() => Observable.of(this.onDeleteFileError(action.payload.file)))\n        )\n      )\n    );\n\n  @Effect()\n  public deleteFilesSelection$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION)\n    .pipe(\n      switchMap((action: IFileManagerAction) => this.deleteFilesSelection(action.payload.fileIds)\n        .pipe(\n          map((result: boolean): IFileManagerAction => {\n            return this.fileManagerActions.deleteSelectedFilesSuccess(action.payload.files);\n          }),\n          catchError(() => Observable.of(this.onDeleteFilesSelectionError(action.payload.files)))\n        )\n      )\n    );\n\n\n  @Effect()\n  public uploadFile$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE)\n    .pipe(\n      switchMap((action: IFileManagerAction) => this.uploadFile(action.payload.files[0])\n        .pipe(\n          map((result: IOuterFile): IFileManagerAction => {\n            return this.fileManagerActions.uploadSuccess(result);\n          }),\n          catchError(() => {\n            return Observable.empty();\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public moveFile$ = this.actions$\n    .ofType(TreeActionsService.TREE_MOVE_NODE)\n    .pipe(\n      filter((action: ITreeAction) => {\n        return action.payload.sourceOfDroppedData === 'FILE';\n      }),\n      switchMap((action: ITreeAction) => this.moveFiles([<IOuterFile>action.payload.oldNode], action.payload.node)\n        .pipe(\n          map((result: IOuterFile[]): IFileManagerAction => {\n            const folderId = (<IOuterFile>action.payload.oldNode).folderId;\n            return this.fileManagerActions.moveFileSuccess(result, folderId);\n          }),\n          catchError(() => {\n            return Observable.of(this.fileManagerActions.moveFileError([<IOuterFile>action.payload.oldNode]));\n          })\n        )\n      )\n    );\n\n  @Effect()\n  public filesMoveSuccess$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_MOVE_FILES_SUCCESS)\n    .pipe(\n      map((action: IFileManagerAction) => {\n        this.onMoveFilesSuccess();\n\n        return this.fileManagerActions.loadFiles(action.payload.folderId);\n      })\n    );\n\n  public uploadError$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_ERROR)\n    .pipe(\n      map((action: IFileManagerAction) => {\n        this.filemanagerNotfication.sendNotification({\n          type: 'alert',\n          title: 'File upload',\n          message: `${action.payload.file.name} exists on the server in this directory`\n        });\n      })\n    );\n\n  public cropFileSuccess$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS);\n\n\n  public cropFileError$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_CROP_FILE_ERROR)\n    .subscribe((action: IFileManagerAction) => {\n      this.onCropFileError(action.payload.file);\n    });\n\n  public deleteFileSuccess$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS);\n\n  public filesMoveError$ = this.actions$\n    .ofType(FileManagerActionsService.FILEMANAGER_MOVE_FILES_ERROR)\n    .subscribe((action: IFileManagerAction) => {\n      this.onMoveFilesError();\n    });\n\n\n  constructor(private actions$: Actions,\n              private fileManagerActions: FileManagerActionsService,\n              private filemanagerNotfication: FilemanagerNotifcations,\n              private fileManagerApiService: FileManagerApiService) {\n  }\n\n  protected cropFile(file: IFileModel, bounds: ICropBounds): Observable<IOuterFile> {\n    return this.fileManagerApiService.cropFile(file.toJSON(), bounds);\n  }\n\n  protected deleteFile(file: IFileModel): Observable<boolean> {\n    return this.fileManagerApiService.removeFile(file.toJSON());\n  }\n\n  protected deleteFilesSelection(files: string[]): Observable<boolean> {\n    return this.fileManagerApiService.removeSelectedFiles(files);\n  }\n\n  protected loadFiles(folderId: string | null): Observable<IOuterFile[]> {\n    return this.fileManagerApiService.loadFiles(folderId);\n  }\n\n  protected uploadFile(file: IOuterFile): Observable<IOuterFile> {\n    return this.fileManagerApiService.uploadFile(file);\n  }\n\n  protected moveFiles(files: IOuterFile[], folder: IOuterNode = null): Observable<IOuterFile[]> {\n    return this.fileManagerApiService.moveFile(files, folder);\n  }\n\n  protected onCropFileError(file: IFileModel): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'alert',\n      title: 'Crop Image',\n      message: '[FILEMANAGER] Can not crop file'\n    });\n  }\n\n  protected onDeleteFileError(file: IFileModel): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Delete file',\n      message: '[FILEMANAGER] Can not delete file' + file.name\n    });\n  }\n\n  protected onDeleteFilesSelectionError(files: IOuterFile[]): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Delete selected files',\n      message: '[FILEMANAGER] Not all files were deleted'\n    });\n  }\n\n  protected onLoadFilesError(folderId: string): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Load files',\n      message: '[FILEMANAGER] Can not load files for folder ' + folderId\n    });\n  }\n\n  protected onMoveFilesSuccess(): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'success',\n      title: 'Move files',\n      message: 'File was successfully moved to folder'\n    });\n  }\n\n  protected onMoveFilesError(): void {\n    this.filemanagerNotfication.sendNotification({\n      type: 'error',\n      title: 'Move files',\n      message: 'File was not successfully moved to new folder'\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerEffects.service.ts","import {IOuterFile} from '../filesList/interface/IOuterFile';\nimport {FileManagerActionsService, IFileManagerAction} from './fileManagerActions.service';\nimport {createFeatureSelector} from '@ngrx/store';\n\nexport type storeEntities = { [key: string]: IOuterFile };\n\nexport interface IFileManagerState {\n  entities: storeEntities,\n  files: string[],\n  selectedFiles: string[]\n}\n\n\nfunction cropFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  const file = action.payload.file;\n  const id = file.getId().toString();\n\n  state.entities[id] = <IOuterFile>Object.assign({}, file.toJSON());\n\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.selectedFiles\n  }\n}\n\nfunction inverseFilesSelection(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.files.filter((i: string) => state.selectedFiles.indexOf(i) === -1)\n  };\n}\n\nfunction loadFiles(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  const entities: storeEntities = {};\n  const files: string[] = [];\n\n  action.payload.files.map((file: IOuterFile) => {\n    const id = file.id.toString();\n\n    entities[id] = file;\n    files.push(id);\n  });\n\n\n  return {\n    entities: entities,\n    files: files,\n    selectedFiles: []\n  };\n}\n\n\nfunction moveFiles(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  const files = action.payload.files;\n  const ids: string[] = files.map(file => file.id.toString());\n  const folderId = action.payload.folderId ? action.payload.folderId.toString() : '';\n\n  const entities = Object.assign({}, state.entities);\n\n  ids.forEach((id: string) => {\n    const oldEntity = Object.assign({}, entities[id])\n    oldEntity.folderId = folderId;\n\n    entities[id] = oldEntity;\n  });\n\n  return {\n    entities: entities,\n    files: state.files.filter((i: string) => ids.indexOf(i) === -1),\n    selectedFiles: state.selectedFiles.filter((i: string) => ids.indexOf(i) === -1)\n  }\n}\n\nfunction removeFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  let id = action.payload.file.getId();\n\n  delete state.entities[id];\n\n  return {\n    entities: state.entities,\n    files: state.files.filter((i: string) => i !== id),\n    selectedFiles: state.selectedFiles\n  }\n}\n\nfunction removeSelectedFiles(state: IFileManagerState): IFileManagerState {\n  const files: string[] = state.files.filter((i: string) => state.selectedFiles.indexOf(i) === -1);\n  const entities: storeEntities = {};\n\n  files.forEach((fileId: string) => {\n    entities[fileId] = state.entities[fileId];\n  });\n\n  return {\n    entities: entities,\n    files: files,\n    selectedFiles: []\n  };\n}\n\nfunction selectFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: [...state.selectedFiles, action.payload.file.getId().toString()]\n  };\n}\n\nfunction selectAllFiles(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: [...state.files]\n  };\n}\n\nfunction uploadFiles(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  const newState = {\n    entities: Object.assign({}, state.entities),\n    files: [...state.files],\n    selectedFiles: []\n  };\n\n  action.payload.files.forEach((file: IOuterFile) => {\n    const id = file.id.toString();\n\n    newState.entities[id] = file;\n    newState.files.push(id);\n  });\n\n\n  return newState;\n}\n\n\nfunction unSelectAllFiles(state: IFileManagerState): IFileManagerState {\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: []\n  };\n}\n\nfunction unSelectFile(state: IFileManagerState, action: IFileManagerAction): IFileManagerState {\n  const fileId = action.payload.file.getId().toString();\n\n  return {\n    entities: state.entities,\n    files: state.files,\n    selectedFiles: state.selectedFiles.filter((id: string) => id !== fileId)\n  };\n}\n\nexport function fileManagerReducer(state: IFileManagerState = {\n  entities: {},\n  files: [],\n  selectedFiles: []\n}, action: IFileManagerAction): IFileManagerState {\n  switch (action.type) {\n    case FileManagerActionsService.FILEMANAGER_CROP_FILE_SUCCESS:\n      return cropFile(state, action);\n    case FileManagerActionsService.FILEMANAGER_INVERSE_FILE_SELECTION:\n      return inverseFilesSelection(state);\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION_SUCCESS:\n      return removeSelectedFiles(state);\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SUCCESS:\n      return removeFile(state, action);\n    case FileManagerActionsService.FILEMANAGER_MOVE_FILES_SUCCESS:\n      return moveFiles(state, action);\n    case FileManagerActionsService.FILEMANAGER_LOAD_FILES_SUCCESS:\n      return loadFiles(state, action);\n    case FileManagerActionsService.FILEMANAGER_SELECT_ALL:\n      return selectAllFiles(state);\n    case FileManagerActionsService.FILEMANAGER_SELECT_FILE:\n      return selectFile(state, action);\n    case FileManagerActionsService.FILEMANAGER_UNSELECT_ALL:\n      return unSelectAllFiles(state);\n    case FileManagerActionsService.FILEMANAGER_UNSELECT_FILE:\n      return unSelectFile(state, action);\n    case FileManagerActionsService.FILEMANAGER_UPLOAD_FILE_SUCCESS:\n      return uploadFiles(state, action);\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE_SELECTION:\n    case FileManagerActionsService.FILEMANAGER_CROP_FILE:\n    case FileManagerActionsService.FILEMANAGER_DELETE_FILE:\n    case FileManagerActionsService.FILEMANAGER_LOAD_FILES:\n    case FileManagerActionsService.FILEMANAGER_MOVE_FILES_ERROR:\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport const filemanagerStateSelector = createFeatureSelector<IFileManagerState>('files');\n\nexport const getAll = (state: IFileManagerState): IOuterFile[] => {\n  return state.files.map((id: string) => state.entities[id]);\n};\n\nexport const isChangeStateFiles = (newState: IFileManagerState, prevState: IFileManagerState): boolean => {\n  return prevState.files.length !== newState.files.length || prevState.files.filter((i: string) => newState.files.indexOf(i) === -1).length > 0\n};\n\nexport const isChangeStateSelectedFiles = (newState: IFileManagerState, prevState: IFileManagerState): boolean => {\n  return prevState.selectedFiles.length !== newState.selectedFiles.length || prevState.selectedFiles.filter((i: string) => newState.selectedFiles.indexOf(i) === -1).length > 0\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/store/fileManagerReducer.ts","module.exports = \"<div class=\\\"btn-group\\\">\\n  <button *ngFor=\\\"let type of typeFilterList\\\" class=\\\"btn btn-default\\\" [ngClass]=\\\"{'active': type === selectedType}\\\"\\n          (click)=\\\"setFilterType(type)\\\">\\n    <i class=\\\"{{type.iconCls}}\\\"></i>\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.html\n// module id = ../../../../../src/toolbar/fileTypeFilter/fileTypeFilter.component.html\n// module chunks = main","import {Component, Input, OnInit} from '@angular/core';\nimport {IFileTypeFilter} from '../interface/IFileTypeFilter';\nimport {FileTypeFilterService} from '../../services/fileTypeFilter.service';\n\n@Component({\n  selector: 'ri-file-type-filter',\n  templateUrl: './fileTypeFilter.component.html'\n})\n\nexport class FileTypeFilterComponent implements OnInit {\n  @Input() typeFilterList: IFileTypeFilter[] = [];\n\n  public selectedType: IFileTypeFilter = null;\n\n  constructor(private fileTypeFilter: FileTypeFilterService) {\n    this.fileTypeFilter.filter$\n      .subscribe((type: IFileTypeFilter | null) => {\n        this.selectedType = type;\n      })\n  }\n\n  ngOnInit() {\n    /** init file type filter **/\n    this.typeFilterList\n      .filter((type: IFileTypeFilter) => {\n        return type.defaultSelected;\n      })\n      .forEach((type: IFileTypeFilter) => {\n        this.fileTypeFilter.setValue(type);\n      });\n  }\n\n  /**\n   * Set current filter and fire event\n   * @param type\n   */\n  public setFilterType(type: IFileTypeFilter) {\n    this.fileTypeFilter.setValue(type);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/fileTypeFilter/fileTypeFilter.component.ts","export class Button {\n  static ADD_FOLDER = 'ADD_FOLDER';\n  static DELETE_SELECTION = 'DELETE_SELECTION';\n  static INVERSE_SELECTION = 'INVERSE_SELECTION';\n  static REFRESH_FILES_LIST = 'REFRESH_FILES_LIST';\n  static SELECT_ALL = 'SELECT_ALL';\n  static UNSELECT_ALL = 'UNSELECT_ALL';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/models/button.model.ts","import {IToolbarEvent} from '../interface/IToolbarEvent';\n\nexport class ToolbarEventModel implements IToolbarEvent {\n  constructor(public name: string, public value: string = null) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/models/toolbarEvent.model.ts","module.exports = \"<div class=\\\"input-group\\\">\\n  <input [formControl]=\\\"searchField\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'RI_FM_LBL_SEARCH_FOR' | translate}}\\\">\\n  <span class=\\\"input-group-btn\\\">\\n      <button (click)=\\\"searchField.reset('')\\\" class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n          <i class=\\\"fa fa-times\\\"></i>\\n      </button>\\n  </span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/toolbar/searchFile/searchFile.component.html\n// module id = ../../../../../src/toolbar/searchFile/searchFile.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {SearchFilterService} from '../../services/searchFilter.service';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n  selector: 'ri-search-file',\n  templateUrl: './searchFile.component.html'\n})\n\nexport class SearchFileComponent implements OnInit {\n\n  public searchField = new FormControl();\n\n  constructor(private searchFilterService: SearchFilterService) {\n  }\n\n  ngOnInit() {\n    this.searchField.valueChanges\n      .pipe(\n        debounceTime(250)\n      )\n      .subscribe((value: string) => this.searchFilterService.setValue(value));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/searchFile/searchFile.component.ts","import {Component, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {IButton, IButtonData} from '../../dropdown/IButton';\nimport {ButtonClass} from '../../dropdown/Button.class';\nimport {Button} from '../models/button.model';\nimport {ButtonDividerClass} from '../../dropdown/ButtonDivider.class';\nimport {CurrentDirectoryFilesService} from '../../services/currentDirectoryFiles.service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {FileManagerConfiguration} from '../../configuration/fileManagerConfiguration.service';\nimport {IToolbarEvent} from '../interface/IToolbarEvent';\nimport {ToolbarEventModel} from '../models/toolbarEvent.model';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/observable/combineLatest';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n@Component({\n  selector: 'ri-selection-dropdown',\n  templateUrl: './selection.dropdown.html'\n})\nexport class SelectionComponent implements OnDestroy {\n  @Output() onMenuButtonClick = new EventEmitter();\n\n  public selectButtonsList: IButton[];\n\n  public selectAllButton = new ButtonClass({\n    symbol: Button.SELECT_ALL,\n    name: 'RI_FM_LBL_SELECT_ALL',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-check-square-o'\n  });\n\n  private unselectAllButton = new ButtonClass({\n    symbol: Button.UNSELECT_ALL,\n    name: 'RI_FM_LBL_UNSELECT_ALL',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-square-o'\n  });\n\n  private inverseSelectionButton = new ButtonClass({\n    symbol: Button.INVERSE_SELECTION,\n    name: 'RI_FM_LBL_INVERSE_SELECTION',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-check-square'\n  });\n\n  private deleteSelectionButton = new ButtonClass({\n    symbol: Button.DELETE_SELECTION,\n    name: 'RI_FM_LBL_DELETE_SELECTION',\n    label: true,\n    icon: true,\n    iconCssClass: 'fa fa-trash'\n  });\n\n  private onLoadFilesSubscriber: Subscription;\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     private currentDirectoryFilesService: CurrentDirectoryFilesService) {\n\n    this.selectButtonsList = this.createBasicButtons();\n\n    this.initListenOnLoadFiles();\n  }\n\n  public ngOnDestroy() {\n    this.onLoadFilesSubscriber.unsubscribe();\n  }\n\n  /**\n   * Initialize listener on load files\n   */\n  public initListenOnLoadFiles() {\n    this.onLoadFilesSubscriber = Observable.combineLatest(\n      this.currentDirectoryFilesService.currentDirectoryFileIds$,\n      this.currentDirectoryFilesService.selectedFiles$\n    )\n      .pipe(\n        distinctUntilChanged()\n      )\n      .subscribe((data: string[][]) => {\n        const numberOfFiles = data[0].length;\n        const numberOfSelectedFiles = data[1].length;\n\n        this.disableAllButtons();\n\n        if (numberOfFiles > 0) {\n          if (numberOfSelectedFiles > 0) {\n            this.enableAllButtons();\n          } else {\n            this.enableSelectAllButton();\n          }\n        }\n      });\n  }\n\n\n  public onSelectDropdownClick(button: IButtonData) {\n    let event: IToolbarEvent = new ToolbarEventModel(button.symbol);\n    this.onMenuButtonClick.emit(event);\n  }\n\n  /**\n   * Disable all dropdown buttons and main button\n   */\n  private disableAllButtons(): void {\n    this.selectAllButton.disabled = true;\n\n    this.selectButtonsList\n      .filter((button: IButton) => {\n        return !button.isDivider();\n      })\n      .forEach((button: IButtonData) => {\n        button.disabled = true;\n      });\n  }\n\n  /**\n   * Enable all dropdown buttons and main button\n   */\n  private enableAllButtons(): void {\n    this.selectAllButton.disabled = false;\n\n    this.selectButtonsList\n      .forEach((button: IButtonData) => {\n        button.disabled = false;\n      });\n  }\n\n  /**\n   * Create list of buttons\n   * @returns {IButton[]}\n   */\n  private createBasicButtons(): IButton[] {\n    return [\n      this.selectAllButton,\n      this.unselectAllButton,\n      this.inverseSelectionButton,\n      new ButtonDividerClass(),\n      this.deleteSelectionButton\n    ];\n  }\n\n  /**\n   * Enable only select button\n   */\n  private enableSelectAllButton(): void {\n    this.selectAllButton.disabled = false;\n    this.inverseSelectionButton.disabled = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/selectionDropDown/selection.component.ts","module.exports = \"<ri-dropdown *ngIf=\\\"configuration.isMultiSelection\\\" [mainButton]=\\\"selectAllButton\\\" [buttons]=\\\"selectButtonsList\\\"\\n             (onClick)=\\\"onSelectDropdownClick($event)\\\"></ri-dropdown>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/toolbar/selectionDropDown/selection.dropdown.html\n// module id = ../../../../../src/toolbar/selectionDropDown/selection.dropdown.html\n// module chunks = main","import {Component, EventEmitter, Output, Input, OnChanges} from '@angular/core';\nimport {Button} from './models/button.model';\nimport {ToolbarEventModel} from './models/toolbarEvent.model';\nimport {IToolbarEvent} from './interface/IToolbarEvent';\nimport {FileManagerConfiguration} from '../configuration/fileManagerConfiguration.service';\nimport {FileManagerUploader} from '../filesList/fileManagerUploader.service';\nimport {FileManagerDispatcherService} from '../store/fileManagerDispatcher.service';\n\n@Component({\n  selector: 'ri-toolbar',\n  styleUrls: ['./toolbar.less'],\n  templateUrl: './toolbar.html'\n})\n\nexport class ToolbarComponent implements OnChanges {\n  @Input() currentFolderId: string;\n\n  @Output() onAddFolderClick = new EventEmitter();\n  @Output() onUpload = new EventEmitter();\n  @Output() onMenuButtonClick = new EventEmitter();\n\n\n  public constructor(public configuration: FileManagerConfiguration,\n                     public fileManagerUploader: FileManagerUploader,\n                     private fileManagerDispatcher: FileManagerDispatcherService) {\n\n    this.fileManagerUploader.clear();\n\n    this.fileManagerUploader.uploader.onCompleteAll = () => {\n      this.onUpload.emit(this.currentFolderId || '');\n    };\n\n    this.fileManagerUploader.uploader.onCompleteItem = (item: any, response: any, status: number, headers: any) => {\n      if (status === 200) {\n        this.fileManagerDispatcher.upload(JSON.parse(response));\n      } else {\n        this.fileManagerDispatcher.uploadError(JSON.parse(response));\n      }\n    };\n  }\n\n  public ngOnChanges() {\n    this.fileManagerUploader.setDirectoryId(this.currentFolderId || '');\n  }\n\n  public addFolder() {\n    let event: IToolbarEvent = new ToolbarEventModel(Button.ADD_FOLDER, 'Nowy folder');\n    this.onAddFolderClick.emit(event);\n  }\n\n  public onRefreshFilesList() {\n    let event: IToolbarEvent = new ToolbarEventModel(Button.REFRESH_FILES_LIST);\n    this.onMenuButtonClick.emit(event);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/www/projects/angular2-filemanager/src/toolbar/toolbar.component.ts","module.exports = \"<div class=\\\"toolbar row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"addFolder()\\\">\\n        <i class=\\\"fa fa-plus\\\"></i>\\n        <i class=\\\"fa fa-folder-o\\\"></i>\\n      </button>\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"fileInput.click()\\\">\\n        <i class=\\\"fa fa-plus\\\"></i>\\n        <i class=\\\"fa fa-file-o\\\"></i>\\n      </button>\\n      <span class=\\\"hidden-input-file\\\">\\n        <input #fileInput type=\\\"file\\\" ng2FileSelect [uploader]=\\\"fileManagerUploader.uploader\\\" (onCompleteAll)=\\\"onUpload()\\\" (onCompleteItem)=\\\"onUploadItem()\\\" multiple/>\\n      </span>\\n    </div>\\n    <ri-selection-dropdown (onMenuButtonClick)=\\\"onMenuButtonClick.next($event)\\\"></ri-selection-dropdown>\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-default\\\" (click)=\\\"onRefreshFilesList()\\\">\\n        <i class=\\\"fa fa-refresh\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <ri-file-type-filter [typeFilterList]=\\\"configuration.fileTypesFilter\\\"></ri-file-type-filter>\\n  </div>\\n  <div class=\\\"col-md-3\\\">\\n    <ri-search-file></ri-search-file>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/toolbar/toolbar.html\n// module id = ../../../../../src/toolbar/toolbar.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".toolbar {\\n  margin-bottom: 10px;\\n}\\n.btn {\\n  height: 34px;\\n}\\n.btn-file {\\n  position: relative;\\n  overflow: hidden;\\n}\\n.hidden-input-file {\\n  visibility: hidden;\\n  position: absolute;\\n  overflow: hidden;\\n  width: 0;\\n  height: 0;\\n  border: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/www/projects/angular2-filemanager/src/toolbar/toolbar.less\n// module id = ../../../../../src/toolbar/toolbar.less\n// module chunks = main"],"sourceRoot":"webpack:///"}